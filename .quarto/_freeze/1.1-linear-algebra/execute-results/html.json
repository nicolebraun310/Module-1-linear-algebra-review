{
  "hash": "f8f478550fdaefd0f995c592f4ed1d40",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"1.1 - data as vectors\"\nformat: \n  revealjs:\n    slide-number: true\neditor_options: \n  chunk_output_type: console\n  mode: source\n---\n\n\n\n## What is a vector?\n\n::: incremental\n-   A $p$-vector can be thought of as:\n    -   a coordinate in $p$-dimensional space;\n    -   a specification of *magnitude* and *direction* in $p$-dimensional space\n-   Vectors can be expressed in *row* or *column* format.\n    -   $u = (3,1)$ is a 2-dimensional *row* vector\n    -   $v = \\begin{pmatrix}4\\\\-1\\\\2\\end{pmatrix}$ is a 3-dimensional *column* vector\n:::\n\n## What is a vector?\n\n::: column\n-   2-dimensional vectors are easy to visualize in a Cartesian plane\n-   For example, consider $u = (3, 2)$\n:::\n\n::: column\n\n\n::: {.cell layout-align=\"right\"}\n::: {.cell-output-display}\n![](1.1-linear-algebra_files/figure-revealjs/unnamed-chunk-1-1.png){fig-align='right' width=480}\n:::\n:::\n\n\n:::\n\n## Data as vectors {.smaller}\n\n::: column\nA typical data frame can be thought of as a series of row vectors:\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nhead(cars)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n  speed dist\n1     4    2\n2     4   10\n3     7    4\n4     7   22\n5     8   16\n6     9   10\n```\n\n\n:::\n:::\n\n\n\nWe have $n$ 2-dimensional vectors:\n\n-   The vector (4, 2);\n-   The vector (4, 10);\\\n-   etc.\n:::\n\n::: column\n\n\n::: {.cell layout-align=\"right\"}\n::: {.cell-output-display}\n![](1.1-linear-algebra_files/figure-revealjs/unnamed-chunk-3-1.png){fig-align='right' width=480}\n:::\n:::\n\n\n:::\n\n## Data as vectors {.smaller}\n\n::: column\nA typical data frame can be thought of as a series of row vectors:\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nhead(cars)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n  speed dist\n1     4    2\n2     4   10\n3     7    4\n4     7   22\n5     8   16\n6     9   10\n```\n\n\n:::\n:::\n\n\n\nWe have $n$ 2-dimensional vectors:\n\n-   The vector (4, 2);\n-   The vector (4, 10);\n-   etc.\n:::\n\n::: column\n\n\n::: {.cell layout-align=\"right\"}\n::: {.cell-output-display}\n![](1.1-linear-algebra_files/figure-revealjs/unnamed-chunk-5-1.png){fig-align='right' width=480}\n:::\n:::\n\n\n:::\n\n## Higher dimensions {.smaller}\n\n-   Of course, in practice we have more than 2 columns of data.\n-   Below is a 3D scatter plot and vector plot of $n=10$ vectors of $p=3$ columns:\n\n::: column\n\n\n::: {.cell}\n::: {.cell-output-display}\n\n```{=html}\n<div id=\"rgl14617\" style=\"width:400px;height:400px;\" class=\"rglWebGL html-widget\" role=\"img\" aria-labelledby=\"rgl14617-aria\"></div>\n<script type=\"application/json\" data-for=\"rgl14617\">{\"x\":{\"material\":{\"color\":\"#000000\",\"alpha\":1,\"lit\":true,\"ambient\":\"#000000\",\"specular\":\"#FFFFFF\",\"emission\":\"#000000\",\"shininess\":50,\"smooth\":true,\"front\":\"filled\",\"back\":\"filled\",\"size\":3,\"lwd\":1,\"fog\":true,\"point_antialias\":false,\"line_antialias\":false,\"texture\":null,\"textype\":\"rgb\",\"texmode\":\"modulate\",\"texmipmap\":false,\"texminfilter\":\"linear\",\"texmagfilter\":\"linear\",\"texenvmap\":false,\"depth_mask\":true,\"depth_test\":\"less\",\"isTransparent\":false,\"polygon_offset\":[0,0],\"margin\":\"\",\"floating\":false,\"tag\":\"\",\"blend\":[\"src_alpha\",\"one_minus_src_alpha\"]},\"rootSubscene\":6,\"objects\":{\"13\":{\"id\":13,\"type\":\"points\",\"material\":{\"lit\":false},\"vertices\":\"0\",\"colors\":\"1\",\"centers\":\"2\",\"ignoreExtent\":false,\"flags\":34816},\"15\":{\"id\":15,\"type\":\"text\",\"material\":{\"lit\":false,\"margin\":0,\"floating\":true,\"edge\":[0,1,1]},\"vertices\":\"3\",\"colors\":\"4\",\"texts\":[[\"x\"]],\"cex\":[[1]],\"adj\":[[0.5,0.5,0.5]],\"centers\":\"5\",\"family\":[[\"sans\"]],\"font\":[[1]],\"ignoreExtent\":true,\"flags\":33808},\"16\":{\"id\":16,\"type\":\"text\",\"material\":{\"lit\":false,\"margin\":1,\"floating\":true,\"edge\":[1,1,1]},\"vertices\":\"6\",\"colors\":\"7\",\"texts\":[[\"y\"]],\"cex\":[[1]],\"adj\":[[0.5,0.5,0.5]],\"centers\":\"8\",\"family\":[[\"sans\"]],\"font\":[[1]],\"ignoreExtent\":true,\"flags\":33808},\"17\":{\"id\":17,\"type\":\"text\",\"material\":{\"lit\":false,\"margin\":2,\"floating\":true,\"edge\":[1,1,1]},\"vertices\":\"9\",\"colors\":\"10\",\"texts\":[[\"z\"]],\"cex\":[[1]],\"adj\":[[0.5,0.5,0.5]],\"centers\":\"11\",\"family\":[[\"sans\"]],\"font\":[[1]],\"ignoreExtent\":true,\"flags\":33808},\"10\":{\"id\":10,\"type\":\"light\",\"vertices\":[[0,0,1]],\"colors\":[[1,1,1,1],[1,1,1,1],[1,1,1,1]],\"viewpoint\":true,\"finite\":false},\"12\":{\"id\":12,\"type\":\"background\",\"material\":{\"lit\":false,\"back\":\"lines\"},\"colors\":\"12\",\"centers\":\"13\",\"sphere\":false,\"fogtype\":\"none\",\"fogscale\":1,\"flags\":32768},\"14\":{\"id\":14,\"type\":\"bboxdeco\",\"material\":{\"front\":\"lines\",\"back\":\"lines\"},\"vertices\":\"14\",\"colors\":\"15\",\"axes\":{\"mode\":[\"pretty\",\"pretty\",\"pretty\"],\"step\":[0.5,0.5,1],\"nticks\":[5,5,5],\"marklen\":[15,15,15],\"expand\":[1.029999971389771,1.029999971389771,1.029999971389771]},\"draw_front\":true,\"flags\":32769},\"6\":{\"id\":6,\"type\":\"subscene\",\"par3d\":{\"antialias\":8,\"FOV\":30,\"ignoreExtent\":false,\"listeners\":6,\"mouseMode\":{\"none\":\"none\",\"left\":\"trackball\",\"right\":\"zoom\",\"middle\":\"fov\",\"wheel\":\"pull\"},\"observer\":[0,0,14.70145130157471],\"modelMatrix\":[[1.010622382164001,0,0,-0.1387470215559006],[0,0.3643743395805359,0.8801621794700623,-0.5142080187797546],[0,-1.001110196113586,0.3203528523445129,-14.55639171600342],[0,0,0,1]],\"projMatrix\":[[3.732050895690918,0,0,0],[0,3.732050895690918,0,0],[0,0,-3.863703489303589,-52.99703216552734],[0,0,-1,0]],\"skipRedraw\":false,\"userMatrix\":[[1,0,0,0],[0,0.3420201433256682,0.9396926207859085,0],[0,-0.9396926207859085,0.3420201433256682,0],[0,0,0,1]],\"userProjection\":[[1,0,0,0],[0,1,0,0],[0,0,1,0],[0,0,0,1]],\"scale\":[1.010622382164001,1.065359234809875,0.9366490244865417],\"viewport\":{\"x\":0,\"y\":0,\"width\":1,\"height\":1},\"zoom\":1,\"bbox\":[-1.578819274902344,1.853396534919739,-1.33490777015686,1.92096483707428,-1.38873016834259,2.314550161361694],\"windowRect\":[112,135,368,391],\"family\":\"sans\",\"font\":1,\"cex\":1,\"useFreeType\":false,\"fontname\":\"TT Arial\",\"maxClipPlanes\":8,\"glVersion\":4.6,\"activeSubscene\":0},\"embeddings\":{\"viewport\":\"replace\",\"projection\":\"replace\",\"model\":\"replace\",\"mouse\":\"replace\"},\"objects\":[12,14,13,15,16,17,10],\"subscenes\":[],\"flags\":36113}},\"crosstalk\":{\"key\":[],\"group\":[],\"id\":[],\"options\":[]},\"width\":400,\"height\":400,\"buffer\":{\"accessors\":[{\"bufferView\":0,\"componentType\":5126,\"count\":10,\"type\":\"VEC3\"},{\"bufferView\":1,\"componentType\":5121,\"count\":1,\"type\":\"VEC4\"},{\"bufferView\":2,\"componentType\":5126,\"count\":10,\"type\":\"VEC3\"},{\"bufferView\":3,\"componentType\":5126,\"count\":1,\"type\":\"VEC3\"},{\"bufferView\":4,\"componentType\":5121,\"count\":1,\"type\":\"VEC4\"},{\"bufferView\":5,\"componentType\":5126,\"count\":1,\"type\":\"VEC3\"},{\"bufferView\":6,\"componentType\":5126,\"count\":1,\"type\":\"VEC3\"},{\"bufferView\":7,\"componentType\":5121,\"count\":1,\"type\":\"VEC4\"},{\"bufferView\":8,\"componentType\":5126,\"count\":1,\"type\":\"VEC3\"},{\"bufferView\":9,\"componentType\":5126,\"count\":1,\"type\":\"VEC3\"},{\"bufferView\":10,\"componentType\":5121,\"count\":1,\"type\":\"VEC4\"},{\"bufferView\":11,\"componentType\":5126,\"count\":1,\"type\":\"VEC3\"},{\"bufferView\":12,\"componentType\":5121,\"count\":1,\"type\":\"VEC4\"},{\"bufferView\":13,\"componentType\":5121,\"count\":1,\"type\":\"VEC3\"},{\"bufferView\":14,\"componentType\":5126,\"count\":17,\"type\":\"VEC3\"},{\"bufferView\":15,\"componentType\":5121,\"count\":1,\"type\":\"VEC4\"}],\"bufferViews\":[{\"buffer\":0,\"byteLength\":120,\"byteOffset\":0},{\"buffer\":0,\"byteLength\":4,\"byteOffset\":120},{\"buffer\":0,\"byteLength\":120,\"byteOffset\":124},{\"buffer\":0,\"byteLength\":12,\"byteOffset\":244},{\"buffer\":0,\"byteLength\":4,\"byteOffset\":256},{\"buffer\":0,\"byteLength\":12,\"byteOffset\":260},{\"buffer\":0,\"byteLength\":12,\"byteOffset\":272},{\"buffer\":0,\"byteLength\":4,\"byteOffset\":284},{\"buffer\":0,\"byteLength\":12,\"byteOffset\":288},{\"buffer\":0,\"byteLength\":12,\"byteOffset\":300},{\"buffer\":0,\"byteLength\":4,\"byteOffset\":312},{\"buffer\":0,\"byteLength\":12,\"byteOffset\":316},{\"buffer\":0,\"byteLength\":4,\"byteOffset\":328},{\"buffer\":0,\"byteLength\":3,\"byteOffset\":332},{\"buffer\":0,\"byteLength\":204,\"byteOffset\":336},{\"buffer\":0,\"byteLength\":4,\"byteOffset\":540}],\"buffers\":[{\"byteLength\":544,\"bytes\":\"FuBSP5tdHj+MAu2+ZJUMPmoxgb+MAu2+ZJUMv+let77pwbG/wnJkvyUJL7+MAu0+bwX2Pku3\\ncT+MAu2+GTztPy3i9T+XIRRAwnJkv9YHlj6MAu2+bwX2PtYHlj6MAu0+wBbKv0Leqr+MAu2+\\nZJUMPiUJL7+MAu0+AAAAARbgUj+bXR4/jALtvmSVDD5qMYG/jALtvmSVDL/pXre+6cGxv8Jy\\nZL8lCS+/jALtPm8F9j5Lt3E/jALtvhk87T8t4vU/lyEUQMJyZL/WB5Y+jALtvm8F9j7WB5Y+\\njALtPsAWyr9C3qq/jALtvmSVDD4lCS+/jALtPgAAwH8AAIBAAACAPwAAAAEAAMB/AACAQAAA\\ngD8AAMB/AACAQAAAgD8AAAABAADAfwAAgEAAAIA/AADAfwAAgEAAAIA/AAAAAQAAwH8AAIBA\\nAACAPwEBAQEAAAAAAADAvwAAwH8AAMB/AACAvwAAwH8AAMB/AAAAvwAAwH8AAMB/AAAAAAAA\\nwH8AAMB/AAAAPwAAwH8AAMB/AACAPwAAwH8AAMB/AADAPwAAwH8AAMB/AADAfwAAgL8AAMB/\\nAADAfwAAAL8AAMB/AADAfwAAAAAAAMB/AADAfwAAAD8AAMB/AADAfwAAgD8AAMB/AADAfwAA\\nwD8AAMB/AADAfwAAwH8AAIC/AADAfwAAwH8AAAAAAADAfwAAwH8AAIA/AADAfwAAwH8AAABA\\nAAAAAQ==\"}]},\"context\":{\"shiny\":false,\"rmarkdown\":null},\"vertexShader\":\"#line 2 1\\n// File 1 is the vertex shader\\n#ifdef GL_ES\\n#ifdef GL_FRAGMENT_PRECISION_HIGH\\nprecision highp float;\\n#else\\nprecision mediump float;\\n#endif\\n#endif\\n\\nattribute vec3 aPos;\\nattribute vec4 aCol;\\nuniform mat4 mvMatrix;\\nuniform mat4 prMatrix;\\nvarying vec4 vCol;\\nvarying vec4 vPosition;\\n\\n#ifdef NEEDS_VNORMAL\\nattribute vec3 aNorm;\\nuniform mat4 normMatrix;\\nvarying vec4 vNormal;\\n#endif\\n\\n#if defined(HAS_TEXTURE) || defined (IS_TEXT)\\nattribute vec2 aTexcoord;\\nvarying vec2 vTexcoord;\\n#endif\\n\\n#ifdef FIXED_SIZE\\nuniform vec3 textScale;\\n#endif\\n\\n#ifdef FIXED_QUADS\\nattribute vec3 aOfs;\\n#endif\\n\\n#ifdef IS_TWOSIDED\\n#ifdef HAS_NORMALS\\nvarying float normz;\\nuniform mat4 invPrMatrix;\\n#else\\nattribute vec3 aPos1;\\nattribute vec3 aPos2;\\nvarying float normz;\\n#endif\\n#endif // IS_TWOSIDED\\n\\n#ifdef FAT_LINES\\nattribute vec3 aNext;\\nattribute vec2 aPoint;\\nvarying vec2 vPoint;\\nvarying float vLength;\\nuniform float uAspect;\\nuniform float uLwd;\\n#endif\\n\\n#ifdef USE_ENVMAP\\nvarying vec3 vReflection;\\n#endif\\n\\nvoid main(void) {\\n  \\n#ifndef IS_BRUSH\\n#if defined(NCLIPPLANES) || !defined(FIXED_QUADS) || defined(HAS_FOG) || defined(USE_ENVMAP)\\n  vPosition = mvMatrix * vec4(aPos, 1.);\\n#endif\\n  \\n#ifndef FIXED_QUADS\\n  gl_Position = prMatrix * vPosition;\\n#endif\\n#endif // !IS_BRUSH\\n  \\n#ifdef IS_POINTS\\n  gl_PointSize = POINTSIZE;\\n#endif\\n  \\n  vCol = aCol;\\n  \\n// USE_ENVMAP implies NEEDS_VNORMAL\\n\\n#ifdef NEEDS_VNORMAL\\n  vNormal = normMatrix * vec4(-aNorm, dot(aNorm, aPos));\\n#endif\\n\\n#ifdef USE_ENVMAP\\n  vReflection = normalize(reflect(vPosition.xyz/vPosition.w, \\n                        normalize(vNormal.xyz/vNormal.w)));\\n#endif\\n  \\n#ifdef IS_TWOSIDED\\n#ifdef HAS_NORMALS\\n  /* normz should be calculated *after* projection */\\n  normz = (invPrMatrix*vNormal).z;\\n#else\\n  vec4 pos1 = prMatrix*(mvMatrix*vec4(aPos1, 1.));\\n  pos1 = pos1/pos1.w - gl_Position/gl_Position.w;\\n  vec4 pos2 = prMatrix*(mvMatrix*vec4(aPos2, 1.));\\n  pos2 = pos2/pos2.w - gl_Position/gl_Position.w;\\n  normz = pos1.x*pos2.y - pos1.y*pos2.x;\\n#endif\\n#endif // IS_TWOSIDED\\n  \\n#ifdef NEEDS_VNORMAL\\n  vNormal = vec4(normalize(vNormal.xyz), 1);\\n#endif\\n  \\n#if defined(HAS_TEXTURE) || defined(IS_TEXT)\\n  vTexcoord = aTexcoord;\\n#endif\\n  \\n#if defined(FIXED_SIZE) && !defined(ROTATING)\\n  vec4 pos = prMatrix * mvMatrix * vec4(aPos, 1.);\\n  pos = pos/pos.w;\\n  gl_Position = pos + vec4(aOfs*textScale, 0.);\\n#endif\\n  \\n#if defined(IS_SPRITES) && !defined(FIXED_SIZE)\\n  vec4 pos = mvMatrix * vec4(aPos, 1.);\\n  pos = pos/pos.w + vec4(aOfs,  0.);\\n  gl_Position = prMatrix*pos;\\n#endif\\n  \\n#ifdef FAT_LINES\\n  /* This code was inspired by Matt Deslauriers' code in \\n   https://mattdesl.svbtle.com/drawing-lines-is-hard */\\n  vec2 aspectVec = vec2(uAspect, 1.0);\\n  mat4 projViewModel = prMatrix * mvMatrix;\\n  vec4 currentProjected = projViewModel * vec4(aPos, 1.0);\\n  currentProjected = currentProjected/currentProjected.w;\\n  vec4 nextProjected = projViewModel * vec4(aNext, 1.0);\\n  vec2 currentScreen = currentProjected.xy * aspectVec;\\n  vec2 nextScreen = (nextProjected.xy / nextProjected.w) * aspectVec;\\n  float len = uLwd;\\n  vec2 dir = vec2(1.0, 0.0);\\n  vPoint = aPoint;\\n  vLength = length(nextScreen - currentScreen)/2.0;\\n  vLength = vLength/(vLength + len);\\n  if (vLength > 0.0) {\\n    dir = normalize(nextScreen - currentScreen);\\n  }\\n  vec2 normal = vec2(-dir.y, dir.x);\\n  dir.x /= uAspect;\\n  normal.x /= uAspect;\\n  vec4 offset = vec4(len*(normal*aPoint.x*aPoint.y - dir), 0.0, 0.0);\\n  gl_Position = currentProjected + offset;\\n#endif\\n  \\n#ifdef IS_BRUSH\\n  gl_Position = vec4(aPos, 1.);\\n#endif\\n}\",\"fragmentShader\":\"#line 2 2\\n// File 2 is the fragment shader\\n#ifdef GL_ES\\n#ifdef GL_FRAGMENT_PRECISION_HIGH\\nprecision highp float;\\n#else\\nprecision mediump float;\\n#endif\\n#endif\\nvarying vec4 vCol; // carries alpha\\nvarying vec4 vPosition;\\n#if defined(HAS_TEXTURE) || defined (IS_TEXT)\\nvarying vec2 vTexcoord;\\nuniform sampler2D uSampler;\\n#endif\\n\\n#ifdef HAS_FOG\\nuniform int uFogMode;\\nuniform vec3 uFogColor;\\nuniform vec4 uFogParms;\\n#endif\\n\\n#if defined(IS_LIT) && !defined(FIXED_QUADS)\\nvarying vec4 vNormal;\\n#endif\\n\\n#if NCLIPPLANES > 0\\nuniform vec4 vClipplane[NCLIPPLANES];\\n#endif\\n\\n#if NLIGHTS > 0\\nuniform mat4 mvMatrix;\\n#endif\\n\\n#ifdef IS_LIT\\nuniform vec3 emission;\\nuniform float shininess;\\n#if NLIGHTS > 0\\nuniform vec3 ambient[NLIGHTS];\\nuniform vec3 specular[NLIGHTS]; // light*material\\nuniform vec3 diffuse[NLIGHTS];\\nuniform vec3 lightDir[NLIGHTS];\\nuniform bool viewpoint[NLIGHTS];\\nuniform bool finite[NLIGHTS];\\n#endif\\n#endif // IS_LIT\\n\\n#ifdef IS_TWOSIDED\\nuniform bool front;\\nvarying float normz;\\n#endif\\n\\n#ifdef FAT_LINES\\nvarying vec2 vPoint;\\nvarying float vLength;\\n#endif\\n\\n#ifdef USE_ENVMAP\\nvarying vec3 vReflection;\\n#endif\\n\\nvoid main(void) {\\n  vec4 fragColor;\\n#ifdef FAT_LINES\\n  vec2 point = vPoint;\\n  bool neg = point.y < 0.0;\\n  point.y = neg ? (point.y + vLength)/(1.0 - vLength) :\\n                 -(point.y - vLength)/(1.0 - vLength);\\n#if defined(IS_TRANSPARENT) && defined(IS_LINESTRIP)\\n  if (neg && length(point) <= 1.0) discard;\\n#endif\\n  point.y = min(point.y, 0.0);\\n  if (length(point) > 1.0) discard;\\n#endif // FAT_LINES\\n  \\n#ifdef ROUND_POINTS\\n  vec2 coord = gl_PointCoord - vec2(0.5);\\n  if (length(coord) > 0.5) discard;\\n#endif\\n  \\n#if NCLIPPLANES > 0\\n  for (int i = 0; i < NCLIPPLANES; i++)\\n    if (dot(vPosition, vClipplane[i]) < 0.0) discard;\\n#endif\\n    \\n#ifdef FIXED_QUADS\\n    vec3 n = vec3(0., 0., 1.);\\n#elif defined(IS_LIT)\\n    vec3 n = normalize(vNormal.xyz);\\n#endif\\n    \\n#ifdef IS_TWOSIDED\\n    if ((normz <= 0.) != front) discard;\\n#endif\\n\\n#ifdef IS_LIT\\n    vec3 eye = normalize(-vPosition.xyz/vPosition.w);\\n    vec3 lightdir;\\n    vec4 colDiff;\\n    vec3 halfVec;\\n    vec4 lighteffect = vec4(emission, 0.);\\n    vec3 col;\\n    float nDotL;\\n#ifdef FIXED_QUADS\\n    n = -faceforward(n, n, eye);\\n#endif\\n    \\n#if NLIGHTS > 0\\n    // Simulate two-sided lighting\\n    if (n.z < 0.0)\\n      n = -n;\\n    for (int i=0;i<NLIGHTS;i++) {\\n      colDiff = vec4(vCol.rgb * diffuse[i], vCol.a);\\n      lightdir = lightDir[i];\\n      if (!viewpoint[i]) {\\n        if (finite[i]) {\\n          lightdir = (mvMatrix * vec4(lightdir, 1.)).xyz;\\n        } else {\\n          lightdir = (mvMatrix * vec4(lightdir, 0.)).xyz;\\n        }\\n      }\\n      if (!finite[i]) {\\n        halfVec = normalize(lightdir + eye);\\n      } else {\\n        lightdir = normalize(lightdir - vPosition.xyz/vPosition.w);\\n        halfVec = normalize(lightdir + eye);\\n      }\\n      col = ambient[i];\\n      nDotL = dot(n, lightdir);\\n      col = col + max(nDotL, 0.) * colDiff.rgb;\\n      col = col + pow(max(dot(halfVec, n), 0.), shininess) * specular[i];\\n      lighteffect = lighteffect + vec4(col, colDiff.a);\\n    }\\n#endif\\n    \\n#else // not IS_LIT\\n    vec4 colDiff = vCol;\\n    vec4 lighteffect = colDiff;\\n#endif\\n    \\n#ifdef IS_TEXT\\n    vec4 textureColor = lighteffect*texture2D(uSampler, vTexcoord);\\n#endif\\n    \\n#ifdef HAS_TEXTURE\\n\\n// These calculations use the definitions from \\n// https://docs.gl/gl3/glTexEnv\\n\\n#ifdef USE_ENVMAP\\n    float m = 2.0 * sqrt(dot(vReflection, vReflection) + 2.0*vReflection.z + 1.0);\\n    vec4 textureColor = texture2D(uSampler, vReflection.xy / m + vec2(0.5, 0.5));\\n#else\\n    vec4 textureColor = texture2D(uSampler, vTexcoord);\\n#endif\\n\\n#ifdef TEXTURE_rgb\\n\\n#if defined(TEXMODE_replace) || defined(TEXMODE_decal)\\n    textureColor = vec4(textureColor.rgb, lighteffect.a);\\n#endif \\n\\n#ifdef TEXMODE_modulate\\n    textureColor = lighteffect*vec4(textureColor.rgb, 1.);\\n#endif\\n\\n#ifdef TEXMODE_blend\\n    textureColor = vec4((1. - textureColor.rgb) * lighteffect.rgb, lighteffect.a);\\n#endif\\n\\n#ifdef TEXMODE_add\\n    textureColor = vec4(lighteffect.rgb + textureColor.rgb, lighteffect.a);\\n#endif\\n\\n#endif //TEXTURE_rgb\\n        \\n#ifdef TEXTURE_rgba\\n\\n#ifdef TEXMODE_replace\\n// already done\\n#endif \\n\\n#ifdef TEXMODE_modulate\\n    textureColor = lighteffect*textureColor;\\n#endif\\n\\n#ifdef TEXMODE_decal\\n    textureColor = vec4((1. - textureColor.a)*lighteffect.rgb) +\\n                     textureColor.a*textureColor.rgb, \\n                     lighteffect.a);\\n#endif\\n\\n#ifdef TEXMODE_blend\\n    textureColor = vec4((1. - textureColor.rgb) * lighteffect.rgb,\\n                    lighteffect.a*textureColor.a);\\n#endif\\n\\n#ifdef TEXMODE_add\\n    textureColor = vec4(lighteffect.rgb + textureColor.rgb,\\n                    lighteffect.a*textureColor.a);\\n#endif\\n    \\n#endif //TEXTURE_rgba\\n    \\n#ifdef TEXTURE_alpha\\n    float luminance = dot(vec3(1.,1.,1.),textureColor.rgb)/3.;\\n\\n#if defined(TEXMODE_replace) || defined(TEXMODE_decal)\\n    textureColor = vec4(lighteffect.rgb, luminance);\\n#endif \\n\\n#if defined(TEXMODE_modulate) || defined(TEXMODE_blend) || defined(TEXMODE_add)\\n    textureColor = vec4(lighteffect.rgb, lighteffect.a*luminance);\\n#endif\\n \\n#endif // TEXTURE_alpha\\n    \\n// The TEXTURE_luminance values are not from that reference    \\n#ifdef TEXTURE_luminance\\n    float luminance = dot(vec3(1.,1.,1.),textureColor.rgb)/3.;\\n\\n#if defined(TEXMODE_replace) || defined(TEXMODE_decal)\\n    textureColor = vec4(luminance, luminance, luminance, lighteffect.a);\\n#endif \\n\\n#ifdef TEXMODE_modulate\\n    textureColor = vec4(luminance*lighteffect.rgb, lighteffect.a);\\n#endif\\n\\n#ifdef TEXMODE_blend\\n    textureColor = vec4((1. - luminance)*lighteffect.rgb,\\n                        lighteffect.a);\\n#endif\\n\\n#ifdef TEXMODE_add\\n    textureColor = vec4(luminance + lighteffect.rgb, lighteffect.a);\\n#endif\\n\\n#endif // TEXTURE_luminance\\n \\n    \\n#ifdef TEXTURE_luminance_alpha\\n    float luminance = dot(vec3(1.,1.,1.),textureColor.rgb)/3.;\\n\\n#if defined(TEXMODE_replace) || defined(TEXMODE_decal)\\n    textureColor = vec4(luminance, luminance, luminance, textureColor.a);\\n#endif \\n\\n#ifdef TEXMODE_modulate\\n    textureColor = vec4(luminance*lighteffect.rgb, \\n                        textureColor.a*lighteffect.a);\\n#endif\\n\\n#ifdef TEXMODE_blend\\n    textureColor = vec4((1. - luminance)*lighteffect.rgb,\\n                        textureColor.a*lighteffect.a);\\n#endif\\n\\n#ifdef TEXMODE_add\\n    textureColor = vec4(luminance + lighteffect.rgb, \\n                        textureColor.a*lighteffect.a);\\n\\n#endif\\n\\n#endif // TEXTURE_luminance_alpha\\n    \\n    fragColor = textureColor;\\n\\n#elif defined(IS_TEXT)\\n    if (textureColor.a < 0.1)\\n      discard;\\n    else\\n      fragColor = textureColor;\\n#else\\n    fragColor = lighteffect;\\n#endif // HAS_TEXTURE\\n    \\n#ifdef HAS_FOG\\n    // uFogParms elements: x = near, y = far, z = fogscale, w = (1-sin(FOV/2))/(1+sin(FOV/2))\\n    // In Exp and Exp2: use density = density/far\\n    // fogF will be the proportion of fog\\n    // Initialize it to the linear value\\n    float fogF;\\n    if (uFogMode > 0) {\\n      fogF = (uFogParms.y - vPosition.z/vPosition.w)/(uFogParms.y - uFogParms.x);\\n      if (uFogMode > 1)\\n        fogF = mix(uFogParms.w, 1.0, fogF);\\n      fogF = fogF*uFogParms.z;\\n      if (uFogMode == 2)\\n        fogF = 1.0 - exp(-fogF);\\n      // Docs are wrong: use (density*c)^2, not density*c^2\\n      // https://gitlab.freedesktop.org/mesa/mesa/-/blob/master/src/mesa/swrast/s_fog.c#L58\\n      else if (uFogMode == 3)\\n        fogF = 1.0 - exp(-fogF*fogF);\\n      fogF = clamp(fogF, 0.0, 1.0);\\n      gl_FragColor = vec4(mix(fragColor.rgb, uFogColor, fogF), fragColor.a);\\n    } else gl_FragColor = fragColor;\\n#else\\n    gl_FragColor = fragColor;\\n#endif // HAS_FOG\\n    \\n}\",\"players\":[],\"webGLoptions\":{\"preserveDrawingBuffer\":true},\"fastTransparency\":true},\"evals\":[],\"jsHooks\":[]}</script>\n```\n\n:::\n:::\n\n\n:::\n\n::: column\n\n\n::: {.cell}\n::: {.cell-output-display}\n\n```{=html}\n<div id=\"rgl80957\" style=\"width:400px;height:400px;\" class=\"rglWebGL html-widget\" role=\"img\" aria-labelledby=\"rgl80957-aria\"></div>\n<script type=\"application/json\" data-for=\"rgl80957\">{\"x\":{\"material\":{\"color\":\"#000000\",\"alpha\":1,\"lit\":true,\"ambient\":\"#000000\",\"specular\":\"#FFFFFF\",\"emission\":\"#000000\",\"shininess\":50,\"smooth\":true,\"front\":\"filled\",\"back\":\"filled\",\"size\":3,\"lwd\":1,\"fog\":true,\"point_antialias\":false,\"line_antialias\":false,\"texture\":null,\"textype\":\"rgb\",\"texmode\":\"modulate\",\"texmipmap\":false,\"texminfilter\":\"linear\",\"texmagfilter\":\"linear\",\"texenvmap\":false,\"depth_mask\":true,\"depth_test\":\"less\",\"isTransparent\":false,\"polygon_offset\":[0,0],\"margin\":\"\",\"floating\":false,\"tag\":\"\",\"blend\":[\"src_alpha\",\"one_minus_src_alpha\"]},\"rootSubscene\":6,\"objects\":{\"13\":{\"id\":13,\"type\":\"points\",\"material\":{\"lit\":false},\"vertices\":\"0\",\"colors\":\"1\",\"centers\":\"2\",\"ignoreExtent\":false,\"flags\":34816},\"15\":{\"id\":15,\"type\":\"text\",\"material\":{\"lit\":false,\"margin\":0,\"floating\":true,\"edge\":[0,1,1]},\"vertices\":\"3\",\"colors\":\"4\",\"texts\":[[\"x\"]],\"cex\":[[1]],\"adj\":[[0.5,0.5,0.5]],\"centers\":\"5\",\"family\":[[\"sans\"]],\"font\":[[1]],\"ignoreExtent\":true,\"flags\":33808},\"16\":{\"id\":16,\"type\":\"text\",\"material\":{\"lit\":false,\"margin\":1,\"floating\":true,\"edge\":[1,1,1]},\"vertices\":\"6\",\"colors\":\"7\",\"texts\":[[\"y\"]],\"cex\":[[1]],\"adj\":[[0.5,0.5,0.5]],\"centers\":\"8\",\"family\":[[\"sans\"]],\"font\":[[1]],\"ignoreExtent\":true,\"flags\":33808},\"17\":{\"id\":17,\"type\":\"text\",\"material\":{\"lit\":false,\"margin\":2,\"floating\":true,\"edge\":[1,1,1]},\"vertices\":\"9\",\"colors\":\"10\",\"texts\":[[\"z\"]],\"cex\":[[1]],\"adj\":[[0.5,0.5,0.5]],\"centers\":\"11\",\"family\":[[\"sans\"]],\"font\":[[1]],\"ignoreExtent\":true,\"flags\":33808},\"25\":{\"id\":25,\"type\":\"lines\",\"material\":{\"lit\":false},\"vertices\":\"12\",\"colors\":\"13\",\"centers\":\"14\",\"ignoreExtent\":false,\"flags\":32832},\"26\":{\"id\":26,\"type\":\"triangles\",\"material\":{},\"vertices\":\"15\",\"colors\":\"17\",\"centers\":\"18\",\"normals\":\"16\",\"ignoreExtent\":false,\"flags\":32771},\"27\":{\"id\":27,\"type\":\"triangles\",\"material\":{},\"vertices\":\"19\",\"colors\":\"21\",\"centers\":\"22\",\"normals\":\"20\",\"ignoreExtent\":false,\"flags\":32771},\"28\":{\"id\":28,\"type\":\"triangles\",\"material\":{},\"vertices\":\"23\",\"colors\":\"25\",\"centers\":\"26\",\"normals\":\"24\",\"ignoreExtent\":false,\"flags\":32771},\"29\":{\"id\":29,\"type\":\"triangles\",\"material\":{},\"vertices\":\"27\",\"colors\":\"29\",\"centers\":\"30\",\"normals\":\"28\",\"ignoreExtent\":false,\"flags\":32771},\"30\":{\"id\":30,\"type\":\"triangles\",\"material\":{},\"vertices\":\"31\",\"colors\":\"33\",\"centers\":\"34\",\"normals\":\"32\",\"ignoreExtent\":false,\"flags\":32771},\"31\":{\"id\":31,\"type\":\"triangles\",\"material\":{},\"vertices\":\"35\",\"colors\":\"37\",\"centers\":\"38\",\"normals\":\"36\",\"ignoreExtent\":false,\"flags\":32771},\"32\":{\"id\":32,\"type\":\"triangles\",\"material\":{},\"vertices\":\"39\",\"colors\":\"41\",\"centers\":\"42\",\"normals\":\"40\",\"ignoreExtent\":false,\"flags\":32771},\"33\":{\"id\":33,\"type\":\"triangles\",\"material\":{},\"vertices\":\"43\",\"colors\":\"45\",\"centers\":\"46\",\"normals\":\"44\",\"ignoreExtent\":false,\"flags\":32771},\"34\":{\"id\":34,\"type\":\"triangles\",\"material\":{},\"vertices\":\"47\",\"colors\":\"49\",\"centers\":\"50\",\"normals\":\"48\",\"ignoreExtent\":false,\"flags\":32771},\"35\":{\"id\":35,\"type\":\"triangles\",\"material\":{},\"vertices\":\"51\",\"colors\":\"53\",\"centers\":\"54\",\"normals\":\"52\",\"ignoreExtent\":false,\"flags\":32771},\"10\":{\"id\":10,\"type\":\"light\",\"vertices\":[[0,0,1]],\"colors\":[[1,1,1,1],[1,1,1,1],[1,1,1,1]],\"viewpoint\":true,\"finite\":false},\"12\":{\"id\":12,\"type\":\"background\",\"material\":{\"lit\":false,\"back\":\"lines\"},\"colors\":\"55\",\"centers\":\"56\",\"sphere\":false,\"fogtype\":\"none\",\"fogscale\":1,\"flags\":32768},\"14\":{\"id\":14,\"type\":\"bboxdeco\",\"material\":{\"front\":\"lines\",\"back\":\"lines\"},\"vertices\":\"57\",\"colors\":\"58\",\"axes\":{\"mode\":[\"pretty\",\"pretty\",\"pretty\"],\"step\":[0.5,0.5,1],\"nticks\":[5,5,5],\"marklen\":[15,15,15],\"expand\":[1.029999971389771,1.029999971389771,1.029999971389771]},\"draw_front\":true,\"flags\":32769},\"6\":{\"id\":6,\"type\":\"subscene\",\"par3d\":{\"antialias\":8,\"FOV\":30,\"ignoreExtent\":false,\"listeners\":6,\"mouseMode\":{\"none\":\"none\",\"left\":\"trackball\",\"right\":\"zoom\",\"middle\":\"fov\",\"wheel\":\"pull\"},\"observer\":[0,0,14.70145130157471],\"modelMatrix\":[[1.010622382164001,0,0,-0.1387470215559006],[0,0.3643743395805359,0.8801621794700623,-0.5142080187797546],[0,-1.001110196113586,0.3203528523445129,-14.55639171600342],[0,0,0,1]],\"projMatrix\":[[3.732050895690918,0,0,0],[0,3.732050895690918,0,0],[0,0,-3.863703489303589,-52.99703216552734],[0,0,-1,0]],\"skipRedraw\":false,\"userMatrix\":[[1,0,0,0],[0,0.3420201433256682,0.9396926207859085,0],[0,-0.9396926207859085,0.3420201433256682,0],[0,0,0,1]],\"userProjection\":[[1,0,0,0],[0,1,0,0],[0,0,1,0],[0,0,0,1]],\"scale\":[1.010622382164001,1.065359234809875,0.9366490244865417],\"viewport\":{\"x\":0,\"y\":0,\"width\":1,\"height\":1},\"zoom\":1,\"bbox\":[-1.578819274902344,1.853396534919739,-1.33490777015686,1.92096483707428,-1.38873016834259,2.314550161361694],\"windowRect\":[112,135,368,391],\"family\":\"sans\",\"font\":1,\"cex\":1,\"useFreeType\":false,\"fontname\":\"TT Arial\",\"maxClipPlanes\":8,\"glVersion\":4.6,\"activeSubscene\":0},\"embeddings\":{\"viewport\":\"replace\",\"projection\":\"replace\",\"model\":\"replace\",\"mouse\":\"replace\"},\"objects\":[12,14,13,15,16,17,25,26,27,28,29,30,31,32,33,34,35,10],\"subscenes\":[],\"flags\":36179}},\"crosstalk\":{\"key\":[],\"group\":[],\"id\":[],\"options\":[]},\"width\":400,\"height\":400,\"buffer\":{\"accessors\":[{\"bufferView\":0,\"componentType\":5126,\"count\":10,\"type\":\"VEC3\"},{\"bufferView\":1,\"componentType\":5121,\"count\":1,\"type\":\"VEC4\"},{\"bufferView\":2,\"componentType\":5126,\"count\":10,\"type\":\"VEC3\"},{\"bufferView\":3,\"componentType\":5126,\"count\":1,\"type\":\"VEC3\"},{\"bufferView\":4,\"componentType\":5121,\"count\":1,\"type\":\"VEC4\"},{\"bufferView\":5,\"componentType\":5126,\"count\":1,\"type\":\"VEC3\"},{\"bufferView\":6,\"componentType\":5126,\"count\":1,\"type\":\"VEC3\"},{\"bufferView\":7,\"componentType\":5121,\"count\":1,\"type\":\"VEC4\"},{\"bufferView\":8,\"componentType\":5126,\"count\":1,\"type\":\"VEC3\"},{\"bufferView\":9,\"componentType\":5126,\"count\":1,\"type\":\"VEC3\"},{\"bufferView\":10,\"componentType\":5121,\"count\":1,\"type\":\"VEC4\"},{\"bufferView\":11,\"componentType\":5126,\"count\":1,\"type\":\"VEC3\"},{\"bufferView\":12,\"componentType\":5126,\"count\":20,\"type\":\"VEC3\"},{\"bufferView\":13,\"componentType\":5121,\"count\":1,\"type\":\"VEC4\"},{\"bufferView\":14,\"componentType\":5126,\"count\":10,\"type\":\"VEC3\"},{\"bufferView\":15,\"componentType\":5126,\"count\":54,\"type\":\"VEC3\"},{\"bufferView\":16,\"componentType\":5126,\"count\":54,\"type\":\"VEC3\"},{\"bufferView\":17,\"componentType\":5126,\"count\":1,\"type\":\"VEC4\"},{\"bufferView\":18,\"componentType\":5126,\"count\":18,\"type\":\"VEC3\"},{\"bufferView\":19,\"componentType\":5126,\"count\":54,\"type\":\"VEC3\"},{\"bufferView\":20,\"componentType\":5126,\"count\":54,\"type\":\"VEC3\"},{\"bufferView\":21,\"componentType\":5126,\"count\":1,\"type\":\"VEC4\"},{\"bufferView\":22,\"componentType\":5126,\"count\":18,\"type\":\"VEC3\"},{\"bufferView\":23,\"componentType\":5126,\"count\":54,\"type\":\"VEC3\"},{\"bufferView\":24,\"componentType\":5126,\"count\":54,\"type\":\"VEC3\"},{\"bufferView\":25,\"componentType\":5126,\"count\":1,\"type\":\"VEC4\"},{\"bufferView\":26,\"componentType\":5126,\"count\":18,\"type\":\"VEC3\"},{\"bufferView\":27,\"componentType\":5126,\"count\":54,\"type\":\"VEC3\"},{\"bufferView\":28,\"componentType\":5126,\"count\":54,\"type\":\"VEC3\"},{\"bufferView\":29,\"componentType\":5126,\"count\":1,\"type\":\"VEC4\"},{\"bufferView\":30,\"componentType\":5126,\"count\":18,\"type\":\"VEC3\"},{\"bufferView\":31,\"componentType\":5126,\"count\":54,\"type\":\"VEC3\"},{\"bufferView\":32,\"componentType\":5126,\"count\":54,\"type\":\"VEC3\"},{\"bufferView\":33,\"componentType\":5126,\"count\":1,\"type\":\"VEC4\"},{\"bufferView\":34,\"componentType\":5126,\"count\":18,\"type\":\"VEC3\"},{\"bufferView\":35,\"componentType\":5126,\"count\":54,\"type\":\"VEC3\"},{\"bufferView\":36,\"componentType\":5126,\"count\":54,\"type\":\"VEC3\"},{\"bufferView\":37,\"componentType\":5126,\"count\":1,\"type\":\"VEC4\"},{\"bufferView\":38,\"componentType\":5126,\"count\":18,\"type\":\"VEC3\"},{\"bufferView\":39,\"componentType\":5126,\"count\":54,\"type\":\"VEC3\"},{\"bufferView\":40,\"componentType\":5126,\"count\":54,\"type\":\"VEC3\"},{\"bufferView\":41,\"componentType\":5126,\"count\":1,\"type\":\"VEC4\"},{\"bufferView\":42,\"componentType\":5126,\"count\":18,\"type\":\"VEC3\"},{\"bufferView\":43,\"componentType\":5126,\"count\":54,\"type\":\"VEC3\"},{\"bufferView\":44,\"componentType\":5126,\"count\":54,\"type\":\"VEC3\"},{\"bufferView\":45,\"componentType\":5126,\"count\":1,\"type\":\"VEC4\"},{\"bufferView\":46,\"componentType\":5126,\"count\":18,\"type\":\"VEC3\"},{\"bufferView\":47,\"componentType\":5126,\"count\":54,\"type\":\"VEC3\"},{\"bufferView\":48,\"componentType\":5126,\"count\":54,\"type\":\"VEC3\"},{\"bufferView\":49,\"componentType\":5126,\"count\":1,\"type\":\"VEC4\"},{\"bufferView\":50,\"componentType\":5126,\"count\":18,\"type\":\"VEC3\"},{\"bufferView\":51,\"componentType\":5126,\"count\":54,\"type\":\"VEC3\"},{\"bufferView\":52,\"componentType\":5126,\"count\":54,\"type\":\"VEC3\"},{\"bufferView\":53,\"componentType\":5126,\"count\":1,\"type\":\"VEC4\"},{\"bufferView\":54,\"componentType\":5126,\"count\":18,\"type\":\"VEC3\"},{\"bufferView\":55,\"componentType\":5121,\"count\":1,\"type\":\"VEC4\"},{\"bufferView\":56,\"componentType\":5121,\"count\":1,\"type\":\"VEC3\"},{\"bufferView\":57,\"componentType\":5126,\"count\":17,\"type\":\"VEC3\"},{\"bufferView\":58,\"componentType\":5121,\"count\":1,\"type\":\"VEC4\"}],\"bufferViews\":[{\"buffer\":0,\"byteLength\":120,\"byteOffset\":0},{\"buffer\":0,\"byteLength\":4,\"byteOffset\":120},{\"buffer\":0,\"byteLength\":120,\"byteOffset\":124},{\"buffer\":0,\"byteLength\":12,\"byteOffset\":244},{\"buffer\":0,\"byteLength\":4,\"byteOffset\":256},{\"buffer\":0,\"byteLength\":12,\"byteOffset\":260},{\"buffer\":0,\"byteLength\":12,\"byteOffset\":272},{\"buffer\":0,\"byteLength\":4,\"byteOffset\":284},{\"buffer\":0,\"byteLength\":12,\"byteOffset\":288},{\"buffer\":0,\"byteLength\":12,\"byteOffset\":300},{\"buffer\":0,\"byteLength\":4,\"byteOffset\":312},{\"buffer\":0,\"byteLength\":12,\"byteOffset\":316},{\"buffer\":0,\"byteLength\":240,\"byteOffset\":328},{\"buffer\":0,\"byteLength\":4,\"byteOffset\":568},{\"buffer\":0,\"byteLength\":120,\"byteOffset\":572},{\"buffer\":0,\"byteLength\":648,\"byteOffset\":692},{\"buffer\":0,\"byteLength\":648,\"byteOffset\":1340},{\"buffer\":0,\"byteLength\":16,\"byteOffset\":1988},{\"buffer\":0,\"byteLength\":216,\"byteOffset\":2004},{\"buffer\":0,\"byteLength\":648,\"byteOffset\":2220},{\"buffer\":0,\"byteLength\":648,\"byteOffset\":2868},{\"buffer\":0,\"byteLength\":16,\"byteOffset\":3516},{\"buffer\":0,\"byteLength\":216,\"byteOffset\":3532},{\"buffer\":0,\"byteLength\":648,\"byteOffset\":3748},{\"buffer\":0,\"byteLength\":648,\"byteOffset\":4396},{\"buffer\":0,\"byteLength\":16,\"byteOffset\":5044},{\"buffer\":0,\"byteLength\":216,\"byteOffset\":5060},{\"buffer\":0,\"byteLength\":648,\"byteOffset\":5276},{\"buffer\":0,\"byteLength\":648,\"byteOffset\":5924},{\"buffer\":0,\"byteLength\":16,\"byteOffset\":6572},{\"buffer\":0,\"byteLength\":216,\"byteOffset\":6588},{\"buffer\":0,\"byteLength\":648,\"byteOffset\":6804},{\"buffer\":0,\"byteLength\":648,\"byteOffset\":7452},{\"buffer\":0,\"byteLength\":16,\"byteOffset\":8100},{\"buffer\":0,\"byteLength\":216,\"byteOffset\":8116},{\"buffer\":0,\"byteLength\":648,\"byteOffset\":8332},{\"buffer\":0,\"byteLength\":648,\"byteOffset\":8980},{\"buffer\":0,\"byteLength\":16,\"byteOffset\":9628},{\"buffer\":0,\"byteLength\":216,\"byteOffset\":9644},{\"buffer\":0,\"byteLength\":648,\"byteOffset\":9860},{\"buffer\":0,\"byteLength\":648,\"byteOffset\":10508},{\"buffer\":0,\"byteLength\":16,\"byteOffset\":11156},{\"buffer\":0,\"byteLength\":216,\"byteOffset\":11172},{\"buffer\":0,\"byteLength\":648,\"byteOffset\":11388},{\"buffer\":0,\"byteLength\":648,\"byteOffset\":12036},{\"buffer\":0,\"byteLength\":16,\"byteOffset\":12684},{\"buffer\":0,\"byteLength\":216,\"byteOffset\":12700},{\"buffer\":0,\"byteLength\":648,\"byteOffset\":12916},{\"buffer\":0,\"byteLength\":648,\"byteOffset\":13564},{\"buffer\":0,\"byteLength\":16,\"byteOffset\":14212},{\"buffer\":0,\"byteLength\":216,\"byteOffset\":14228},{\"buffer\":0,\"byteLength\":648,\"byteOffset\":14444},{\"buffer\":0,\"byteLength\":648,\"byteOffset\":15092},{\"buffer\":0,\"byteLength\":16,\"byteOffset\":15740},{\"buffer\":0,\"byteLength\":216,\"byteOffset\":15756},{\"buffer\":0,\"byteLength\":4,\"byteOffset\":15972},{\"buffer\":0,\"byteLength\":3,\"byteOffset\":15976},{\"buffer\":0,\"byteLength\":204,\"byteOffset\":15980},{\"buffer\":0,\"byteLength\":4,\"byteOffset\":16184}],\"buffers\":[{\"byteLength\":16188,\"bytes\":\"FuBSP5tdHj+MAu2+ZJUMPmoxgb+MAu2+ZJUMv+let77pwbG/wnJkvyUJL7+MAu0+bwX2Pku3\\ncT+MAu2+GTztPy3i9T+XIRRAwnJkv9YHlj6MAu2+bwX2PtYHlj6MAu0+wBbKv0Leqr+MAu2+\\nZJUMPiUJL7+MAu0+AAAAARbgUj+bXR4/jALtvmSVDD5qMYG/jALtvmSVDL/pXre+6cGxv8Jy\\nZL8lCS+/jALtPm8F9j5Lt3E/jALtvhk87T8t4vU/lyEUQMJyZL/WB5Y+jALtvm8F9j7WB5Y+\\njALtPsAWyr9C3qq/jALtvmSVDD4lCS+/jALtPgAAwH8AAIBAAACAPwAAAAEAAMB/AACAQAAA\\ngD8AAMB/AACAQAAAgD8AAAABAADAfwAAgEAAAIA/AADAfwAAgEAAAIA/AAAAAQAAwH8AAIBA\\nAACAPwAAAAAAAAAAAAAAABbgUj+bXR4/jALtvgAAAAAAAAAAAAAAAGSVDD5qMYG/jALtvgAA\\nAAAAAAAAAAAAAGSVDL/pXre+6cGxvwAAAAAAAAAAAAAAAMJyZL8lCS+/jALtPgAAAAAAAAAA\\nAAAAAG8F9j5Lt3E/jALtvgAAAAAAAAAAAAAAABk87T8t4vU/lyEUQAAAAAAAAAAAAAAAAMJy\\nZL/WB5Y+jALtvgAAAAAAAAAAAAAAAG8F9j7WB5Y+jALtPgAAAAAAAAAAAAAAAMAWyr9C3qq/\\njALtvgAAAAAAAAAAAAAAAGSVDD4lCS+/jALtPgAAAAEW4NI+m12ePowCbb5klYw9ajEBv4wC\\nbb5klYy+6V43vunBMb/CcuS+JQmvvowCbT5vBXY+S7fxPowCbb4ZPG0/LeJ1P5chlD/CcuS+\\n1gcWPowCbb5vBXY+1gcWPowCbT7AFkq/Qt4qv4wCbb5klYw9JQmvvowCbT5Q6BA/DabZPs7d\\nor5JuxE/ciXdPmRCm761VhM/zFPYPsf6m75Q6BA/DabZPs7dor61VhM/zFPYPsf6m77nzhM/\\nayDUPhrsn75Q6BA/DabZPs7dor7nzhM/ayDUPhrsn76i6xI/f4LSPhg+pb5Q6BA/DabZPs7d\\nor6i6xI/f4LSPhg+pb49FxE/tTvUPnVzqb5Q6BA/DabZPs7dor49FxE/tTvUPnVzqb7jLA8/\\nm33YPhaUqr5Q6BA/DabZPs7dor7jLA8/m33YPhaUqr4FEg4/NkrdPu0YqL5Q6BA/DabZPs7d\\nor4FEg4/NkrdPu0YqL7+Sg4/pmLgPi0ro75Q6BA/DabZPs7dor7+Sg4/pmLgPi0ro74mvQ8/\\nIVTgPjkZnr5Q6BA/DabZPs7dor4mvQ8/IVTgPjkZnr5JuxE/ciXdPmRCm74W4FI/m10eP4wC\\n7b5JuxE/ciXdPmRCm761VhM/zFPYPsf6m74W4FI/m10eP4wC7b61VhM/zFPYPsf6m77nzhM/\\nayDUPhrsn74W4FI/m10eP4wC7b7nzhM/ayDUPhrsn76i6xI/f4LSPhg+pb4W4FI/m10eP4wC\\n7b6i6xI/f4LSPhg+pb49FxE/tTvUPnVzqb4W4FI/m10eP4wC7b49FxE/tTvUPnVzqb7jLA8/\\nm33YPhaUqr4W4FI/m10eP4wC7b7jLA8/m33YPhaUqr4FEg4/NkrdPu0YqL4W4FI/m10eP4wC\\n7b4FEg4/NkrdPu0YqL7+Sg4/pmLgPi0ro74W4FI/m10eP4wC7b7+Sg4/pmLgPi0ro74mvQ8/\\nIVTgPjkZnr4W4FI/m10eP4wC7b4mvQ8/IVTgPjkZnr5JuxE/ciXdPmRCm76Ztzo/OTkMP4vb\\n0b6Ztzo/OTkMP4vb0b6Ztzo/OTkMP4vb0b6utzo/DDkMP7vb0b6utzo/DDkMP7vb0b6utzo/\\nDDkMP7vb0b6xtzo/JTkMP23b0b6xtzo/JTkMP23b0b6xtzo/JTkMP23b0b6htzo/JjkMP6vb\\n0b6htzo/JjkMP6vb0b6htzo/JjkMP6vb0b6ttzo/GzkMP5nb0b6ttzo/GzkMP5nb0b6ttzo/\\nGzkMP5nb0b6ltzo/KDkMP5Xb0b6ltzo/KDkMP5Xb0b6ltzo/KDkMP5Xb0b6ktzo/MDkMP4Xb\\n0b6ktzo/MDkMP4Xb0b6ktzo/MDkMP4Xb0b6btzo/KTkMP7nb0b6btzo/KTkMP7nb0b6btzo/\\nKTkMP7nb0b6ztzo/HTkMP33b0b6ztzo/HTkMP33b0b6ztzo/HTkMP33b0b6pMOA+hakjPtJ8\\nYj+pMOA+hakjPtJ8Yj+pMOA+hakjPtJ8Yj+yUzI/MtfNvsMgGD+yUzI/MtfNvsMgGD+yUzI/\\nMtfNvsMgGD+r/CQ/drFDv34sjTyr/CQ/drFDv34sjTyr/CQ/drFDv34sjTwQopw+S/5BvymL\\nE78Qopw+S/5BvymLE78Qopw+S/5BvymLE7/0hCS+aDvFvqiiaL/0hCS+aDvFvqiiaL/0hCS+\\naDvFvqiiaL9Edgm/zz03PoIMU79Edgm/zz03PoIMU79Edgm/zz03PoIMU7/qmiW/DLUrP/vE\\nub7qmiW/DLUrP/vEub7qmiW/DLUrP/vEub4QyOC+iipcP1wihT4QyOC+iipcP1wihT4QyOC+\\niipcP1wihT7v/S28P4MoP2ayQD/v/S28P4MoP2ayQD/v/S28P4MoP2ayQD+/vj4/v74+P7++\\nPj8AAIA/Gv4RP8Rf2j7+CJ6+T68SPxde1z7llp++nosSP6ht1T5WraK+u6MRP8B21T502qW+\\nJmQQPx911z7Joae+aGIPP/Z52j5GLqe+HBcPP6Mb3T74taS+fKUPP/Ie3j68YKG+68oQP4sK\\n3T7PvZ6+XPsnP9Jm+z7ov7a+kqwoPyRl+D7QTbi+4IgoP7Z09j5AZLu+/KAnP8599j5ekb6+\\naGEmPy58+D6zWMC+ql8lPwOB+z4w5b++XhQlP7Ai/j7ibL2+vqIlP/8l/z6mF7q+LMgmP5gR\\n/j64dLe+HGLAPbXLML9nK6K+6xTSPc0HL78ejqi+8IHgPa3HL7+UN6S+HGLAPbXLML9nK6K+\\n8IHgPa3HL7+UN6S+7+bfPTkBMb/G656+HGLAPbXLML9nK6K+7+bfPTkBMb/G656+cIzQPboh\\nMr8YJZu+HGLAPbXLML9nK6K+cIzQPbohMr8YJZu+kqG5PTOiMr/dp5q+HGLAPbXLML9nK6K+\\nkqG5PTOiMr/dp5q+gd+lPYVGMr+trp2+HGLAPbXLML9nK6K+gd+lPYVGMr+trp2+94SePZc5\\nMb/+zqK+HGLAPbXLML9nK6K+94SePZc5Mb/+zqK+0QKnPT/5L7/Doqe+HGLAPbXLML9nK6K+\\n0QKnPT/5L7/Doqe+4l+7PWEbL7/B56m+HGLAPbXLML9nK6K+4l+7PWEbL7/B56m+6xTSPc0H\\nL78ejqi+ZJUMPmoxgb+MAu2+6xTSPc0HL78ejqi+8IHgPa3HL7+UN6S+ZJUMPmoxgb+MAu2+\\n8IHgPa3HL7+UN6S+7+bfPTkBMb/G656+ZJUMPmoxgb+MAu2+7+bfPTkBMb/G656+cIzQPboh\\nMr8YJZu+ZJUMPmoxgb+MAu2+cIzQPbohMr8YJZu+kqG5PTOiMr/dp5q+ZJUMPmoxgb+MAu2+\\nkqG5PTOiMr/dp5q+gd+lPYVGMr+trp2+ZJUMPmoxgb+MAu2+gd+lPYVGMr+trp2+94SePZc5\\nMb/+zqK+ZJUMPmoxgb+MAu2+94SePZc5Mb/+zqK+0QKnPT/5L7/Doqe+ZJUMPmoxgb+MAu2+\\n0QKnPT/5L7/Doqe+4l+7PWEbL7/B56m+ZJUMPmoxgb+MAu2+4l+7PWEbL7/B56m+6xTSPc0H\\nL78ejqi+qEz7PX3vZr+u1NO+qEz7PX3vZr+u1NO+qEz7PX3vZr+u1NO+f0z7PXfvZr/L1NO+\\nf0z7PXfvZr/L1NO+f0z7PXfvZr/L1NO+tEv7PZLvZr9Y1NO+tEv7PZLvZr9Y1NO+tEv7PZLv\\nZr9Y1NO+0037PXvvZr+T1NO+0037PXvvZr+T1NO+0037PXvvZr+T1NO+9Ur7PX/vZr/C1NO+\\n9Ur7PX/vZr/C1NO+9Ur7PX/vZr/C1NO+XUv7PYPvZr+f1NO+XUv7PYPvZr+f1NO+XUv7PYPv\\nZr+f1NO+XEv7PY3vZr931NO+XEv7PY3vZr931NO+XEv7PY3vZr931NO+w0v7PYfvZr+S1NO+\\nw0v7PYfvZr+S1NO+w0v7PYfvZr+S1NO+LU37PX7vZr+Y1NO+LU37PX7vZr+Y1NO+LU37PX7v\\nZr+Y1NO+tgVIP6fwnD6sLAu/tgVIP6fwnD6sLAu/tgVIP6fwnD6sLAu/5R5/P5MGeD3OYmc9\\n5R5/P5MGeD3OYmc95R5/P5MGeD3OYmc9CH8/P54Fbr7YIh8/CH8/P54Fbr7YIh8/CH8/P54F\\nbr7YIh8/7a0bPsbo3r6FJ2M/7a0bPsbo3r6FJ2M/7a0bPsbo3r6FJ2M/njcDv6oT6L6dsDo/\\nnjcDv6oT6L6dsDo/njcDv6oT6L6dsDo/GU5vvzU5jr57tGI+GU5vvzU5jr57tGI+GU5vvzU5\\njr57tGI+tMRqv3BsEzxZGsy+tMRqv3BsEzxZGsy+tMRqv3BsEzxZGsy+yHXvvgu2iz4UOVe/\\nyHXvvgu2iz4UOVe/yHXvvgu2iz4UOVe/hu1PPkLfxz5O4mW/hu1PPkLfxz5O4mW/hu1PPkLf\\nxz5O4mW/v74+P7++Pj+/vj4/AACAP6j90D1m3i+/CPukvv+Y1T3fhjC/7MShvipH0D2OTzG/\\nwr6evmCFwz2M2jG/ylKdvrtLtT3P5jG/UCuevjJCrD2bbjG/BuOgvkyjrD0vqjC/YzSkvptB\\ntj1y9S+/+pGmvvicxD33pC+/beCmvuKV7j3EEEu/a+29vjgx8z0+uUu/Tre6vmPf7T3ugUy/\\nI7G3vpgd4T3rDE2/K0W2vvTj0j0vGU2/sh23vmvayT37oEy/aNW5voY7yj2P3Eu/xCa9vtPZ\\n0z3SJ0u/W4S/vjI14j1W10q/ztK/vnV72L5NL42+5dyIv7UU3L7Zd4W+LwGJvyar1r7kT4W+\\nvIyJv3V72L5NL42+5dyIvyar1r7kT4W+vIyJv9ka0r741oi+AsaJv3V72L5NL42+5dyIv9ka\\n0r741oi+AsaJv3aG0L6FZo6+NJKJv3V72L5NL42+5dyIv3aG0L6FZo6+NJKJvzar0r5yZJO+\\nkAmJv3V72L5NL42+5dyIvzar0r5yZJO+kAmJv1SI177LepW+BWyIv3V72L5NL42+5dyIv1SI\\n177LepW+BWyIvzXX3L6Kr5O+SwOIv3V72L5NL42+5dyIvzXX3L6Kr5O+SwOIvwQc4L6R2Y6+\\nYgCIv3V72L5NL42+5dyIvwQc4L6R2Y6+YgCIvzTP374kPIm+p2SIv3V72L5NL42+5dyIvzTP\\n374kPIm+p2SIv7UU3L7Zd4W+LwGJv2SVDL/pXre+6cGxv7UU3L7Zd4W+LwGJvyar1r7kT4W+\\nvIyJv2SVDL/pXre+6cGxvyar1r7kT4W+vIyJv9ka0r741oi+AsaJv2SVDL/pXre+6cGxv9ka\\n0r741oi+AsaJv3aG0L6FZo6+NJKJv2SVDL/pXre+6cGxv3aG0L6FZo6+NJKJvzar0r5yZJO+\\nkAmJv2SVDL/pXre+6cGxvzar0r5yZJO+kAmJv1SI177LepW+BWyIv2SVDL/pXre+6cGxv1SI\\n177LepW+BWyIvzXX3L6Kr5O+SwOIv2SVDL/pXre+6cGxvzXX3L6Kr5O+SwOIvwQc4L6R2Y6+\\nYgCIv2SVDL/pXre+6cGxvwQc4L6R2Y6+YgCIvzTP374kPIm+p2SIv2SVDL/pXre+6cGxvzTP\\n374kPIm+p2SIv7UU3L7Zd4W+LwGJv+MVt74zzm6+r39nv+MVt74zzm6+r39nv+MVt74zzm6+\\nr39nvwgWt74Zzm6+qX9nvwgWt74Zzm6+qX9nvwgWt74Zzm6+qX9nv6kVt746z26+qX9nv6kV\\nt746z26+qX9nv6kVt746z26+qX9nv6YVt77Zzm6+sH9nv6YVt77Zzm6+sH9nv6YVt77Zzm6+\\nsH9nvwAWt76Rz26+kX9nvwAWt76Rz26+kX9nvwAWt76Rz26+kX9nv6kVt76Oz26+pH9nv6kV\\nt76Oz26+pH9nv6kVt76Oz26+pH9nvyQWt77Pzm6+mH9nvyQWt77Pzm6+mH9nvyQWt77Pzm6+\\nmH9nvyAWt77pzm6+l39nvyAWt77pzm6+l39nvyAWt77pzm6+l39nv/4Vt75Lzm6+qH9nv/4V\\nt75Lzm6+qH9nv/4Vt75Lzm6+qH9nv4oSAr549XU/MnB8vooSAr549XU/MnB8vooSAr549XU/\\nMnB8vqMj/T5FMUA/Hk7gvqMj/T5FMUA/Hk7gvqMj/T5FMUA/Hk7gvm+JYD9qCj0+wQfjvm+J\\nYD9qCj0+wQfjvm+JYD9qCj0+wQfjvj+LVz/oC/K+ix6Fvj+LVz/oC/K+ix6Fvj+LVz/oC/K+\\nix6FvtSYzz5X6mm/WMXXPNSYzz5X6mm/WMXXPNSYzz5X6mm/WMXXPK+lab7Tl26/pC+QPq+l\\nab7Tl26/pC+QPq+lab7Tl26/pC+QPiIwQ78Z3gS/n9PFPiIwQ78Z3gS/n9PFPiIwQ78Z3gS/\\nn9PFPsaHcr+MKQc+106VPsaHcr+MKQc+106VPsaHcr+MKQc+106VPndJMr+1Zjc/EKgqPXdJ\\nMr+1Zjc/EKgqPXdJMr+1Zjc/EKgqPb++Pj+/vj4/v74+PwAAgD/GE9m+BP2Hvpsjib98wNW+\\nuByJvjZlib9CtNO+QySMvgpnib9g5NO+wqiPvjgoib9WOta+2gSSvijGiL9Untm+4R2Svrxu\\niL87ety+I+iPvtxKiL+Pd92+VmyMvlBriL/KH9y+w0uJvurAiL+Lo+6+4gyWvkfFlr9DUOu+\\nlyyXvuIGl78IROm+IjSavrYIl78ndOm+oLidvuTJlr8byuu+uBSgvtRnlr8bLu++wC2gvmgQ\\nlr8ACvK+Avidvojslb9WB/O+NXyavvwMlr+Qr/G+oluXvpZilr+6DyK/TVf4vpUiqD4vVh+/\\nEZf7vm7XrT6jmyC/zc32vmcCsD66DyK/TVf4vpUiqD6jmyC/zc32vmcCsD4yjyK/qLzyvid+\\nrj66DyK/TVf4vpUiqD4yjyK/qLzyvid+rj4cRyS/zErxvlkAqj66DyK/TVf4vpUiqD4cRyS/\\nzErxvlkAqj6L9SS/SSXzvv2ipD66DyK/TVf4vpUiqD6L9SS/SSXzvv2ipD7fSCS/G273vrDo\\noD66DyK/TVf4vpUiqD7fSCS/G273vrDooD7kkSK/CiT8vvqPoD66DyK/TVf4vpUiqD7kkSK/\\nCiT8vvqPoD4BniC/0RL/vlzCoz66DyK/TVf4vpUiqD4BniC/0RL/vlzCoz4eVx+/Jdv+vugA\\nqT66DyK/TVf4vpUiqD4eVx+/Jdv+vugAqT4vVh+/EZf7vm7XrT7CcmS/JQkvv4wC7T4vVh+/\\nEZf7vm7XrT6jmyC/zc32vmcCsD7CcmS/JQkvv4wC7T6jmyC/zc32vmcCsD4yjyK/qLzyvid+\\nrj7CcmS/JQkvv4wC7T4yjyK/qLzyvid+rj4cRyS/zErxvlkAqj7CcmS/JQkvv4wC7T4cRyS/\\nzErxvlkAqj6L9SS/SSXzvv2ipD7CcmS/JQkvv4wC7T6L9SS/SSXzvv2ipD7fSCS/G273vrDo\\noD7CcmS/JQkvv4wC7T7fSCS/G273vrDooD7kkSK/CiT8vvqPoD7CcmS/JQkvv4wC7T7kkSK/\\nCiT8vvqPoD4BniC/0RL/vlzCoz7CcmS/JQkvv4wC7T4BniC/0RL/vlzCoz4eVx+/Jdv+vugA\\nqT7CcmS/JQkvv4wC7T4eVx+/Jdv+vugAqT4vVh+/EZf7vm7XrT5L5zu/afgPv7zxwj5L5zu/\\nafgPv7zxwj5L5zu/afgPv7zxwj5I5zu/bvgPv7vxwj5I5zu/bvgPv7vxwj5I5zu/bvgPv7vx\\nwj5H5zu/bvgPv7zxwj5H5zu/bvgPv7zxwj5H5zu/bvgPv7zxwj4r5zu/bPgPvy7ywj4r5zu/\\nbPgPvy7ywj4r5zu/bPgPvy7ywj4s5zu/bfgPvynywj4s5zu/bfgPvynywj4s5zu/bfgPvyny\\nwj4z5zu/YPgPvzXywj4z5zu/YPgPvzXywj4z5zu/YPgPvzXywj4e5zu/d/gPv0bywj4e5zu/\\nd/gPv0bywj4e5zu/d/gPv0bywj5C5zu/Z/gPv+Txwj5C5zu/Z/gPv+Txwj5C5zu/Z/gPv+Tx\\nwj5J5zu/cPgPv67xwj5J5zu/cPgPv67xwj5J5zu/cPgPv67xwj6L4fk+qLQGvnvjXD+L4fk+\\nqLQGvnvjXD+L4fk+qLQGvnvjXD+hPrE9kwLXPjlGZz+hPrE9kwLXPjlGZz+hPrE9kwLXPjlG\\nZz+Wx72+h2ZDP9p2Bz+Wx72+h2ZDP9p2Bz+Wx72+h2ZDP9p2Bz/ObSu/BuI8P9Wvrb3ObSu/\\nBuI8P9Wvrb3ObSu/BuI8P9Wvrb34pSu/qgC2Pku1Jr/4pSu/qgC2Pku1Jr/4pSu/qgC2Pku1\\nJr/H476+6cZRvjquZ7/H476+6cZRvjquZ7/H476+6cZRvjquZ7/tMaw9XVUuvyc6Or/tMaw9\\nXVUuvyc6Or/tMaw9XVUuvyc6Or+dDvk+NKJZvyd3Tr6dDvk+NKJZvyd3Tr6dDvk+NKJZvyd3\\nTr7zXiU/YhUiv29V2j7zXiU/YhUiv29V2j7zXiU/YhUiv29V2j6/vj4/v74+P7++Pj8AAIA/\\nL6sgv2Tp+L56qaw+ML4hv+v19b4M4aw+WPciv5Yf9L5c4Ko+IMQjv3ZC9L5Pl6c+t8QjvztO\\n9r5sj6Q+1Pgiv9BN+b7AM6M+4L8hvw7a+776JqQ+Sawgv8LB/L5I96Y+Az8gv4KY+76kU6o+\\nMsw2vzJpDb/LnsM+M983v3bvC79f1sM+Wxg5v0oEC7+v1cE+I+U5v7sVC7+gjL4+uuU5v54b\\nDL++hLs+1xk5v2ibDb8TKbo+4+A3v4bhDr9LHLs+S802v2BVD7+b7L0+BmA2v8DADr/2SME+\\nRdeqPu7ZJz9VlaS+X5+rPkKPKT+SzZy+PGewPiUFKD/vHp6+RdeqPu7ZJz9VlaS+PGewPiUF\\nKD/vHp6+0JSyPs9mJj9odqK+RdeqPu7ZJz9VlaS+0JSyPs9mJj9odqK+NCOxPiB2JT/sy6e+\\nRdeqPu7ZJz9VlaS+NCOxPiB2JT/sy6e+Wr+sPrajJT+KoKu+RdeqPu7ZJz9VlaS+Wr+sPraj\\nJT+KoKu+IHenPjzaJj9rKay+RdeqPu7ZJz9VlaS+IHenPjzaJj9rKay+PsOjPmeIKD+CJqm+\\nRdeqPu7ZJz9VlaS+PsOjPmeIKD+CJqm+Ol+jPu7kKT+HAKS+RdeqPu7ZJz9VlaS+Ol+jPu7k\\nKT+HAKS+4XmmPr5MKj8tIJ++RdeqPu7ZJz9VlaS+4XmmPr5MKj8tIJ++X5+rPkKPKT+SzZy+\\nbwX2Pku3cT+MAu2+X5+rPkKPKT+SzZy+PGewPiUFKD/vHp6+bwX2Pku3cT+MAu2+PGewPiUF\\nKD/vHp6+0JSyPs9mJj9odqK+bwX2Pku3cT+MAu2+0JSyPs9mJj9odqK+NCOxPiB2JT/sy6e+\\nbwX2Pku3cT+MAu2+NCOxPiB2JT/sy6e+Wr+sPrajJT+KoKu+bwX2Pku3cT+MAu2+Wr+sPraj\\nJT+KoKu+IHenPjzaJj9rKay+bwX2Pku3cT+MAu2+IHenPjzaJj9rKay+PsOjPmeIKD+CJqm+\\nbwX2Pku3cT+MAu2+PsOjPmeIKD+CJqm+Ol+jPu7kKT+HAKS+bwX2Pku3cT+MAu2+Ol+jPu7k\\nKT+HAKS+4XmmPr5MKj8tIJ++bwX2Pku3cT+MAu2+4XmmPr5MKj8tIJ++X5+rPkKPKT+SzZy+\\n0crUPqYRUT92/8y+0crUPqYRUT92/8y+0crUPqYRUT92/8y+98rUPpcRUT+V/8y+98rUPpcR\\nUT+V/8y+98rUPpcRUT+V/8y+9crUPp4RUT97/8y+9crUPp4RUT97/8y+9crUPp4RUT97/8y+\\n58rUPpwRUT+T/8y+58rUPpwRUT+T/8y+58rUPpwRUT+T/8y+xsrUPqERUT+g/8y+xsrUPqER\\nUT+g/8y+xsrUPqERUT+g/8y+/crUPo4RUT+w/8y+/crUPo4RUT+w/8y+/crUPo4RUT+w/8y+\\n0MrUPq8RUT9X/8y+0MrUPq8RUT9X/8y+0MrUPq8RUT9X/8y+r8rUPpgRUT/U/8y+r8rUPpgR\\nUT/U/8y+r8rUPpgRUT/U/8y+I8vUPpQRUT9v/8y+I8vUPpQRUT9v/8y+I8vUPpQRUT9v/8y+\\nfMLTPnNBij5Sl14/fMLTPnNBij5Sl14/fMLTPnNBij5Sl14/wdlYP8G+/L3cVgQ/wdlYP8G+\\n/L3cVgQ/wdlYP8G+/L3cVgQ/TI9kP0Vm4r7Hrq+9TI9kP0Vm4r7Hrq+9TI9kP0Vm4r7Hrq+9\\nD4cHP52BCb+mGyi/D4cHP52BCb+mGyi/D4cHP52BCb+mGyi/RraVvcFHur5FuG2/RraVvcFH\\nur5FuG2/RraVvcFHur5FuG2/1/4hv80mXLtVOUa/1/4hv80mXLtVOUa/1/4hv80mXLtVOUa/\\np0VjvxZPwD6sM4i+p0VjvxZPwD6sM4i+p0VjvxZPwD6sM4i+VAA4v2iCGD+Thrc+VAA4v2iC\\nGD+Thrc+VAA4v2iCGD+Thrc+/rZRvvbVDT8ZkU4//rZRvvbVDT8ZkU4//rZRvvbVDT8ZkU4/\\nv74+P7++Pj+/vj4/AACAP6D0rD4ceig/89WfvnBGrz6ibCc/5LihvhiFrz5KkiY/jvKkvkaT\\nrT5CUSY/mQCovutZqj72xyY/GnWpvjZbpz7bvic/waGovur9pT5swig/dumlvnblpj40WSk/\\nA5KivoKlqT6lPCk/siugvgMExj47GUE/Wvq3vtRVyD7AC0A/TN25vnyUyD5oMT8/9ha9vqui\\nxj5g8D4/ACXAvk5pwz4UZz8/gJnBvptqwD77XUA/KMbAvk4Nvz6LYUE/3A2+vtj0vz5T+EE/\\na7a6vua0wj7D20E/GFC4vuOC1T+PS90/b1EFQE4J1T/H5ds/lRYGQDdG1j9Ugds/YsEFQOOC\\n1T+PS90/b1EFQDdG1j9Ugds/YsEFQLsn1z9J89s/zTcFQOOC1T+PS90/b1EFQLsn1z9J89s/\\nzTcFQFRE1z9WBt0/NroEQOOC1T+PS90/b1EFQFRE1z9WBt0/NroEQKCO1j/HOd4/YYMEQOOC\\n1T+PS90/b1EFQKCO1j/HOd4/YYMEQKVb1T/A/d4/96wEQOOC1T+PS90/b1EFQKVb1T/A/d4/\\n96wEQAc71D+Q9t4/gSMFQOOC1T+PS90/b1EFQAc71D+Q9t4/gSMFQNGz0z+TJ94/ia8FQOOC\\n1T+PS90/b1EFQNGz0z+TJ94/ia8FQEgF1D+k8dw/iQ8GQOOC1T+PS90/b1EFQEgF1D+k8dw/\\niQ8GQE4J1T/H5ds/lRYGQBk87T8t4vU/lyEUQE4J1T/H5ds/lRYGQDdG1j9Ugds/YsEFQBk8\\n7T8t4vU/lyEUQDdG1j9Ugds/YsEFQLsn1z9J89s/zTcFQBk87T8t4vU/lyEUQLsn1z9J89s/\\nzTcFQFRE1z9WBt0/NroEQBk87T8t4vU/lyEUQFRE1z9WBt0/NroEQKCO1j/HOd4/YYMEQBk8\\n7T8t4vU/lyEUQKCO1j/HOd4/YYMEQKVb1T/A/d4/96wEQBk87T8t4vU/lyEUQKVb1T/A/d4/\\n96wEQAc71D+Q9t4/gSMFQBk87T8t4vU/lyEUQAc71D+Q9t4/gSMFQNGz0z+TJ94/ia8FQBk8\\n7T8t4vU/lyEUQNGz0z+TJ94/ia8FQEgF1D+k8dw/iQ8GQBk87T8t4vU/lyEUQEgF1D+k8dw/\\niQ8GQE4J1T/H5ds/lRYGQF5LBj/uMAs/6rUnP15LBj/uMAs/6rUnP15LBj/uMAs/6rUnP7pL\\nBj/wMAs/oLUnP7pLBj/wMAs/oLUnP7pLBj/wMAs/oLUnP7pLBj/xMAs/mrUnP7pLBj/xMAs/\\nmrUnP7pLBj/xMAs/mrUnP6VLBj9EMQs/aLUnP6VLBj9EMQs/aLUnP6VLBj9EMQs/aLUnP+JL\\nBj8HMQs/bLUnP+JLBj8HMQs/bLUnP+JLBj8HMQs/bLUnP31LBj8mMQs/obUnP31LBj8mMQs/\\nobUnP31LBj8mMQs/obUnP3JLBj8hMQs/sLUnP3JLBj8hMQs/sLUnP3JLBj8hMQs/sLUnP3VL\\nBj9LMQs/iLUnP3VLBj9LMQs/iLUnP3VLBj9LMQs/iLUnP91LBj+dMAs/yLUnP91LBj+dMAs/\\nyLUnP91LBj+dMAs/yLUnP4mWwj3sKUW/8HYhP4mWwj3sKUW/8HYhP4mWwj3sKUW/8HYhP7N6\\nHz9ZzEG/vsZJPrN6Hz9ZzEG/vsZJPrN6Hz9ZzEG/vsZJPlvMXj8ovMG+AWqhvlvMXj8ovMG+\\nAWqhvlvMXj8ovMG+AWqhvkSmOD9aFkE+IJ4qv0SmOD9aFkE+IJ4qv0SmOD9aFkE+IJ4qv4WF\\nez4Vti0/+jcxv4WFez4Vti0/+jcxv4WFez4Vti0/+jcxv+gLq77+v1w/iNjCvugLq77+v1w/\\niNjCvugLq77+v1w/iNjCvkUhP78sYic/XXn7PUUhP78sYic/XXn7PUUhP78sYic/XXn7PamF\\nTL95Uxo+wg4VP6mFTL95Uxo+wg4VP6mFTL95Uxo+wg4VPwrd7r5ryNK+TmlIPwrd7r5ryNK+\\nTmlIPwrd7r5ryNK+TmlIP7++Pj+/vj4/v74+PwAAgD94m9U/jjvcP3i4BUBHUNY/D0DcPzRu\\nBUD7pNY/u8HcP3wWBUDzcdY/5IPdP1faBEAOz9U/syveP+7VBECGCNU/oGreP04LBUA/e9Q/\\nPCPeP35hBUBUadQ/7nbdPyuwBUAo29Q/VLbcP4TSBUDgg90/w23kP4WoCkCvON4/Q3LkP0Je\\nCkBjjd4/7/PkP4kGCkBaWt4/GrblP2TKCUB0t90/513mP/vFCUDs8Nw/1JzmP1v7CUCmY9w/\\ncFXmP4tRCkC7Udw/IqnlPzigCkCQw9w/iOjkP5LCCkChXhe/ANJGPugKnb4noBi/dF1OPvLP\\nlb4/JRe/6fJVPlUemb6hXhe/ANJGPugKnb4/JRe/6fJVPlUemb4xxRW/MHRWPsVCnr6hXhe/\\nANJGPugKnb4xxRW/MHRWPsVCnr63JBW/zaRPPkjVor6hXhe/ANJGPugKnb63JBW/zaRPPkjV\\nor7ojhW/f7REPiyypL6hXhe/ANJGPugKnb7ojhW/f7REPiyypL4U0ha/kcE6Pk36or6hXhe/\\nANJGPugKnb4U0ha/kcE6Pk36or4EVxi/wXM2Pnx7nr6hXhe/ANJGPugKnb4EVxi/wXM2Pnx7\\nnr67Zxm/ms45PjVQmb6hXhe/ANJGPugKnb67Zxm/ms45PjVQmb6dhBm/QEBDPqXjlb6hXhe/\\nANJGPugKnb6dhBm/QEBDPqXjlb4noBi/dF1OPvLPlb7CcmS/1geWPowC7b4noBi/dF1OPvLP\\nlb4/JRe/6fJVPlUemb7CcmS/1geWPowC7b4/JRe/6fJVPlUemb4xxRW/MHRWPsVCnr7CcmS/\\n1geWPowC7b4xxRW/MHRWPsVCnr63JBW/zaRPPkjVor7CcmS/1geWPowC7b63JBW/zaRPPkjV\\nor7ojhW/f7REPiyypL7CcmS/1geWPowC7b7ojhW/f7REPiyypL4U0ha/kcE6Pk36or7CcmS/\\n1geWPowC7b4U0ha/kcE6Pk36or4EVxi/wXM2Pnx7nr7CcmS/1geWPowC7b4EVxi/wXM2Pnx7\\nnr67Zxm/ms45PjVQmb7CcmS/1geWPowC7b67Zxm/ms45PjVQmb6dhBm/QEBDPqXjlb7CcmS/\\n1geWPowC7b6dhBm/QEBDPqXjlb4noBi/dF1OPvLPlb5fKlq/VUePPm1X4r5fKlq/VUePPm1X\\n4r5fKlq/VUePPm1X4r5qKlq/Q0ePPkhX4r5qKlq/Q0ePPkhX4r5qKlq/Q0ePPkhX4r5bKlq/\\nKUePPptX4r5bKlq/KUePPptX4r5bKlq/KUePPptX4r5ZKlq/90aPPr9X4r5ZKlq/90aPPr9X\\n4r5ZKlq/90aPPr9X4r5cKlq/5UaPPr9X4r5cKlq/5UaPPr9X4r5cKlq/5UaPPr9X4r5eKlq/\\n30aPPrpX4r5eKlq/30aPPrpX4r5eKlq/30aPPrpX4r5cKlq/4EaPPsRX4r5cKlq/4EaPPsRX\\n4r5cKlq/4EaPPsRX4r5mKlq/G0ePPnNX4r5mKlq/G0ePPnNX4r5mKlq/G0ePPnNX4r5jKlq/\\nQkePPmVX4r5jKlq/QkePPmVX4r5jKlq/QkePPmVX4r71Ryq+O/U3PyLeLD/1Ryq+O/U3PyLe\\nLD/1Ryq+O/U3PyLeLD9d/UE+QHR4PwuOGD5d/UE+QHR4PwuOGD5d/UE+QHR4PwuOGD4KtOA+\\nKS5GP5OP6b4KtOA+KS5GP5OP6b4KtOA+KS5GP5OP6b67Ou4+C6RiPvNmW7+7Ou4+C6RiPvNm\\nW7+7Ou4+C6RiPvNmW794PoM+OsbbvlG1Xb94PoM+OsbbvlG1Xb94PoM+OsbbvlG1Xb+1xri9\\ndYhfvxo99b61xri9dYhfvxo99b61xri9dYhfvxo99b7UDtO+vxlnv0L9+z3UDtO+vxlnv0L9\\n+z3UDtO+vxlnv0L9+z2WGg+/cwwBv7mIKD+WGg+/cwwBv7mIKD+WGg+/cwwBv7mIKD+geuy+\\nF3sLPlldYD+geuy+F3sLPlldYD+geuy+F3sLPlldYD+/vj4/v74+P7++Pj8AAIA/rrYXv8pg\\nTj4QU5m+BsMWvwgTUT4AJJy+LhgWv//4Tj78YJ++FgYWv28OST4fhqG+NJUWvwYYQj52kqG+\\nk4IXv8ZXPT47gJ++IF8Yv8gGPT6IR5y+qMMYv/NKQT5Aapm+IoEYvzwlSD6AP5i+DmgxvwMg\\ncD7y+rO+ZnQwv0LScj7iy7a+j8kvvzi4cD7eCLq+drcvv6jNaj4ALry+lkYwvz/XYz5XOry+\\n8zMxv/8WXz4cKLq+gBAyvwPGXj5q77a+CHUyvy4KYz4iErS+gzIyv3bkaT5g57K+IH19PqOV\\nGj43NHQ+7GN4PkW+Dz7yLYA+ZpOAPscLCz7uPHo+IH19PqOVGj43NHQ+ZpOAPscLCz7uPHo+\\ndxmEPpOeDT4uS3E+IH19PqOVGj43NHQ+dxmEPpOeDT4uS3E+ER6FPmZCFj4Ltmk+IH19PqOV\\nGj43NHQ+ER6FPmZCFj4Ltmk+RSeDPlDsID7LCWc+IH19PqOVGj43NHQ+RSeDPlDsID7LCWc+\\nrkB+PvWeKD6ahmo+IH19PqOVGj43NHQ+rkB+PvWeKD6ahmo+UNd1PkDAKT63inI+IH19PqOV\\nGj43NHQ+UNd1PkDAKT63inI+BwJxPtPIIz7sVXs+IH19PqOVGj43NHQ+BwJxPtPIIz7sVXs+\\nxANyPmKDGT5uZYA+IH19PqOVGj43NHQ+xANyPmKDGT5uZYA+7GN4PkW+Dz7yLYA+bwX2PtYH\\nlj6MAu0+7GN4PkW+Dz7yLYA+ZpOAPscLCz7uPHo+bwX2PtYHlj6MAu0+ZpOAPscLCz7uPHo+\\ndxmEPpOeDT4uS3E+bwX2PtYHlj6MAu0+dxmEPpOeDT4uS3E+ER6FPmZCFj4Ltmk+bwX2PtYH\\nlj6MAu0+ER6FPmZCFj4Ltmk+RSeDPlDsID7LCWc+bwX2PtYHlj6MAu0+RSeDPlDsID7LCWc+\\nrkB+PvWeKD6ahmo+bwX2PtYHlj6MAu0+rkB+PvWeKD6ahmo+UNd1PkDAKT63inI+bwX2PtYH\\nlj6MAu0+UNd1PkDAKT63inI+BwJxPtPIIz7sVXs+bwX2PtYHlj6MAu0+BwJxPtPIIz7sVXs+\\nxANyPmKDGT5uZYA+bwX2PtYHlj6MAu0+xANyPmKDGT5uZYA+7GN4PkW+Dz7yLYA+cc0oP2jh\\nzT6JniI/cc0oP2jhzT6JniI/cc0oP2jhzT6JniI/Ws0oP2vhzT6eniI/Ws0oP2vhzT6eniI/\\nWs0oP2vhzT6eniI/Ys0oP4HhzT6PniI/Ys0oP4HhzT6PniI/Ys0oP4HhzT6PniI/Y80oP47h\\nzT6MniI/Y80oP47hzT6MniI/Y80oP47hzT6MniI/ac0oP3fhzT6LniI/ac0oP3fhzT6LniI/\\nac0oP3fhzT6LniI/Y80oP3zhzT6PniI/Y80oP3zhzT6PniI/Y80oP3zhzT6PniI/XM0oP3nh\\nzT6ZniI/XM0oP3nhzT6ZniI/XM0oP3nhzT6ZniI/Xc0oP4bhzT6SniI/Xc0oP4bhzT6SniI/\\nXc0oP4bhzT6SniI/Xc0oP4zhzT6SniI/Xc0oP4zhzT6SniI/Xc0oP4zhzT6SniI/TTF+vNnH\\nTb9fOxg/TTF+vNnHTb9fOxg/TTF+vNnHTb9fOxg/ESj0PgG3Xr+ZbwA+ESj0PgG3Xr+ZbwA+\\nESj0PgG3Xr+ZbwA+IoFCPwpOBb9dVse+IoFCPwpOBb9dVse+IoFCPwpOBb9dVse+4WozP7Tm\\npD2mcDW/4WozP7TmpD2mcDW/4WozP7TmpD2mcDW/DMGnPsIEJz+w8S6/DMGnPsIEJz+w8S6/\\nDMGnPsIEJz+w8S6/eKY9vmVobT+xcKa+eKY9vmVobT+xcKa+eKY9vmVobT+xcKa+/AQZvyPY\\nRj/KQEs+/AQZvyPYRj/KQEs+/AQZvyPYRj/KQEs+aoc3v5++ij64cCQ/aoc3v5++ij64cCQ/\\naoc3v5++ij64cCQ/wlT5vjHatL5afkw/wlT5vjHatL5afkw/wlT5vjHatL5afkw/v74+P7++\\nPj+/vj4/AACAP54CfT6QyhE+WER6Ps8jgT5UFRE+xj51Pl6ngj400hQ+e7xvPqJWgj5zQRs+\\nWlFsPmRXgD5OYCE+35ZsPrYxez6eUSQ+g2xwPn7Hdj7otCI+8wZ2PvqAdT5ISx0+AMd6PvD2\\ndz4YnRY+qHN8PplDpj6TSEI+p2+jPhrmqD5Yk0E+3+ygPqhpqj44UEU+uSuePuwYqj52v0s+\\nKHacPq8ZqD5Q3lE+65icPiVbpT6gz1Q+vIOePgomoz7rMlM+9VChPseCoj5LyU0++7CjPsK9\\noz4cG0c+T4ekPsZjqL8QYI6/03zFviFUqb++6I2/Lg6+vsfLqb8Q/4y/TDXCvsZjqL8QYI6/\\n03zFvsfLqb8Q/4y/TDXCvvqaqb+Puoy/PeXHvsZjqL8QYI6/03zFvvqaqb+Puoy/PeXHvpDY\\nqL9IO42/wnTMvsZjqL8QYI6/03zFvpDYqL9IO42/wnTMvoDfp78ARY6/jcHNvsZjqL8QYI6/\\n03zFvoDfp78ARY6/jcHNvlUkp79iW4+/6C/LvsZjqL8QYI6/03zFvlUkp79iW4+/6C/LvqL+\\npr8r/I+/i/PFvsZjqL8QYI6/03zFvqL+pr8r/I+/i/PFvguAp78h3I+/oX/AvsZjqL8QYI6/\\n03zFvguAp78h3I+/oX/AvgRsqL9ACo+/VGG9vsZjqL8QYI6/03zFvgRsqL9ACo+/VGG9viFU\\nqb++6I2/Lg6+vsAWyr9C3qq/jALtviFUqb++6I2/Lg6+vsfLqb8Q/4y/TDXCvsAWyr9C3qq/\\njALtvsfLqb8Q/4y/TDXCvvqaqb+Puoy/PeXHvsAWyr9C3qq/jALtvvqaqb+Puoy/PeXHvpDY\\nqL9IO42/wnTMvsAWyr9C3qq/jALtvpDYqL9IO42/wnTMvoDfp78ARY6/jcHNvsAWyr9C3qq/\\njALtvoDfp78ARY6/jcHNvlUkp79iW4+/6C/LvsAWyr9C3qq/jALtvlUkp79iW4+/6C/LvqL+\\npr8r/I+/i/PFvsAWyr9C3qq/jALtvqL+pr8r/I+/i/PFvguAp78h3I+/oX/AvsAWyr9C3qq/\\njALtvguAp78h3I+/oX/AvgRsqL9ACo+/VGG9vsAWyr9C3qq/jALtvgRsqL9ACo+/VGG9viFU\\nqb++6I2/Lg6+vgvEPr8+SyG/IL1fvgvEPr8+SyG/IL1fvgvEPr8+SyG/IL1fvv/DPr9xSyG/\\nfrtfvv/DPr9xSyG/frtfvv/DPr9xSyG/frtfviDEPr9oSyG/G7pfviDEPr9oSyG/G7pfviDE\\nPr9oSyG/G7pfvv/DPr+FSyG/hrpfvv/DPr+FSyG/hrpfvv/DPr+FSyG/hrpfvk3EPr8jSyG/\\nwbpfvk3EPr8jSyG/wbpfvk3EPr8jSyG/wbpfvivEPr9oSyG/jLlfvivEPr9oSyG/jLlfvivE\\nPr9oSyG/jLlfvhzEPr9USyG/MbtfvhzEPr9USyG/MbtfvhzEPr9USyG/MbtfvurDPr91SyG/\\nX7xfvurDPr91SyG/X7xfvurDPr91SyG/X7xfvtnDPr+ISyG/c7xfvtnDPr+ISyG/c7xfvtnD\\nPr+ISyG/c7xfvjMKHr/TF90+cFcoPzMKHr/TF90+cFcoPzMKHr/TF90+cFcoP5ixL7+T1zk/\\no7o2PZixL7+T1zk/o7o2PZixL7+T1zk/o7o2PQov5r5m1io/WAAYvwov5r5m1io/WAAYvwov\\n5r5m1io/WAAYvxTdkrxkG5E+7XV1vxTdkrxkG5E+7XV1vxTdkrxkG5E+7XV1v7c20D58FXy+\\nfjlhv7c20D58FXy+fjlhv7c20D58FXy+fjlhvzwjID8ocyy/K4bJvjwjID8ocyy/K4bJvjwj\\nID8ocyy/K4bJvi1JCT+Xh0y/iF+LPi1JCT+Xh0y/iF+LPi1JCT+Xh0y/iF+LPgT4OD7tPxC/\\naF9OPwT4OD7tPxC/aF9OPwT4OD7tPxC/aF9OP/7HjL4wiJ69WFV1P/7HjL4wiJ69WFV1P/7H\\njL4wiJ69WFV1P7++Pj+/vj4/v74+PwAAgD/mK6m/oMKNv8Tqwb6CQ6m/5l2Nv3Qyxb5w8qi/\\n+HGNv/CcyL6dXqi/c/WNvwuRyr40zae/0aqOv8Mkyr5Agqe/ND2Pv8OKx77SoKe/H2iPv6v6\\nw76cGqi/exePv0Mfwb6ktqi/BXGOv8hOwL6OZ7S/BkKXv1gXz74rf7S/S92Wvwdf0r4YLrS/\\nXvGWv4PJ1b5GmrO/2XSXv5+9177cCLO/NyqYv1ZR177ovbK/m7yYv1a31L563LK/hOeYvz4n\\n0b5GVrO/4paYv9ZLzr5M8rO/a/CXv1t7zb5EfaI9UE/Kvm/4iD5+lZE9cAfPvt9Agz68Qag9\\nG9POvtLfgT5EfaI9UE/Kvm/4iD68Qag9G9POvtLfgT4eO7w99oHMvsjQgz5EfaI9UE/Kvm/4\\niD4eO7w99oHMvsjQgz4JKcQ9jSnJvjoriD5EfaI9UE/Kvm/4iD4JKcQ9jSnJvjoriD6rVbw9\\nmFrGvrDljD5EfaI9UE/Kvm/4iD6rVbw9mFrGvrDljD5paqg9gGXFvsfJjz5EfaI9UE/Kvm/4\\niD5paqg9gGXFvsfJjz5EuZE987zGvjR9jz5EfaI9UE/Kvm/4iD5EuZE987zGvjR9jz5l4II9\\nPsDJvssjjD5EfaI9UE/Kvm/4iD5l4II9PsDJvssjjD5E0oI9ewbNvr1Ohz5EfaI9UE/Kvm/4\\niD5E0oI9ewbNvr1Ohz5+lZE9cAfPvt9Agz5klQw+JQkvv4wC7T5+lZE9cAfPvt9Agz68Qag9\\nG9POvtLfgT5klQw+JQkvv4wC7T68Qag9G9POvtLfgT4eO7w99oHMvsjQgz5klQw+JQkvv4wC\\n7T4eO7w99oHMvsjQgz4JKcQ9jSnJvjoriD5klQw+JQkvv4wC7T4JKcQ9jSnJvjoriD6rVbw9\\nmFrGvrDljD5klQw+JQkvv4wC7T6rVbw9mFrGvrDljD5paqg9gGXFvsfJjz5klQw+JQkvv4wC\\n7T5paqg9gGXFvsfJjz5EuZE987zGvjR9jz5klQw+JQkvv4wC7T5EuZE987zGvjR9jz5l4II9\\nPsDJvssjjD5klQw+JQkvv4wC7T5l4II9PsDJvssjjD5E0oI9ewbNvr1Ohz5klQw+JQkvv4wC\\n7T5E0oI9ewbNvr1Ohz5+lZE9cAfPvt9Agz7o8yc+Rx1Rv9STDT/o8yc+Rx1Rv9STDT/o8yc+\\nRx1Rv9STDT+89Cc+Ox1Rv9eTDT+89Cc+Ox1Rv9eTDT+89Cc+Ox1Rv9eTDT8Q9Cc+XR1Rv7GT\\nDT8Q9Cc+XR1Rv7GTDT8Q9Cc+XR1Rv7GTDT8S9Cc+Sx1Rv8uTDT8S9Cc+Sx1Rv8uTDT8S9Cc+\\nSx1Rv8uTDT8L9Cc+Sh1Rv82TDT8L9Cc+Sh1Rv82TDT8L9Cc+Sh1Rv82TDT8B9Cc+SR1Rv82T\\nDT8B9Cc+SR1Rv82TDT8B9Cc+SR1Rv82TDT9i9Cc+Px1Rv9eTDT9i9Cc+Px1Rv9eTDT9i9Cc+\\nPx1Rv9eTDT9p9Cc+Oh1Rv9uTDT9p9Cc+Oh1Rv9uTDT9p9Cc+Oh1Rv9uTDT+l9Cc+UR1Rv7mT\\nDT+l9Cc+UR1Rv7mTDT+l9Cc+UR1Rv7mTDT/xLSq+KYQcv+cPRr/xLSq+KYQcv+cPRr/xLSq+\\nKYQcv+cPRr/b9P4+dJ3ovvUYPb/b9P4+dJ3ovvUYPb/b9P4+dJ3ovvUYPb8HuW4//xTQvapv\\nsb4HuW4//xTQvapvsb4HuW4//xTQvapvsb7eIm8/jD+QPoZtYD7eIm8/jD+QPoZtYD7eIm8/\\njD+QPoZtYD5lhgA/gi0EP+qcMT9lhgA/gi0EP+qcMT9lhgA/gi0EP+qcMT9VaiW+/Bn8PgPy\\nWj9VaiW+/Bn8PgPyWj9VaiW+/Bn8PgPyWj9hAz+/onBiPsDDID9hAz+/onBiPsDDID9hAz+/\\nonBiPsDDID/UbHq/85suvoda8j3UbHq/85suvoda8j3UbHq/85suvoda8j1Cyj+/LqX/vv3V\\n3r5Cyj+/LqX/vv3V3r5Cyj+/LqX/vv3V3r6/vj4/v74+P7++Pj8AAIA/1caePUpjzb4Ls4Q+\\nC/6sPSCMzL4D44Q+JEu2PfKoyr4m/IY+/lO2PdKbyL4eA4o+cxStPXhax75OjYw+UOCePUJ7\\nx755ao0++lySPdbuyL4mM4w+T2WNPVgHy77+eIk+WEySPb/JzL6vgoY+AFbGPUek/r7AC6Y+\\nNo3UPR7N/b64O6Y+UNrdPe/p+77aVKg+KuPdPdDc+b7TW6s+n6PUPXab+L4C5q0+fG/GPT+8\\n+L4uw64+Juy5PdMv+r7ai60+e/S0PVdI/L6y0ao+g9u5PbwK/r5j26c+AQEBAQAAAAAAAMC/\\nAADAfwAAwH8AAIC/AADAfwAAwH8AAAC/AADAfwAAwH8AAAAAAADAfwAAwH8AAAA/AADAfwAA\\nwH8AAIA/AADAfwAAwH8AAMA/AADAfwAAwH8AAMB/AACAvwAAwH8AAMB/AAAAvwAAwH8AAMB/\\nAAAAAAAAwH8AAMB/AAAAPwAAwH8AAMB/AACAPwAAwH8AAMB/AADAPwAAwH8AAMB/AADAfwAA\\ngL8AAMB/AADAfwAAAAAAAMB/AADAfwAAgD8AAMB/AADAfwAAAEAAAAAB\"}]},\"context\":{\"shiny\":false,\"rmarkdown\":null},\"vertexShader\":\"#line 2 1\\n// File 1 is the vertex shader\\n#ifdef GL_ES\\n#ifdef GL_FRAGMENT_PRECISION_HIGH\\nprecision highp float;\\n#else\\nprecision mediump float;\\n#endif\\n#endif\\n\\nattribute vec3 aPos;\\nattribute vec4 aCol;\\nuniform mat4 mvMatrix;\\nuniform mat4 prMatrix;\\nvarying vec4 vCol;\\nvarying vec4 vPosition;\\n\\n#ifdef NEEDS_VNORMAL\\nattribute vec3 aNorm;\\nuniform mat4 normMatrix;\\nvarying vec4 vNormal;\\n#endif\\n\\n#if defined(HAS_TEXTURE) || defined (IS_TEXT)\\nattribute vec2 aTexcoord;\\nvarying vec2 vTexcoord;\\n#endif\\n\\n#ifdef FIXED_SIZE\\nuniform vec3 textScale;\\n#endif\\n\\n#ifdef FIXED_QUADS\\nattribute vec3 aOfs;\\n#endif\\n\\n#ifdef IS_TWOSIDED\\n#ifdef HAS_NORMALS\\nvarying float normz;\\nuniform mat4 invPrMatrix;\\n#else\\nattribute vec3 aPos1;\\nattribute vec3 aPos2;\\nvarying float normz;\\n#endif\\n#endif // IS_TWOSIDED\\n\\n#ifdef FAT_LINES\\nattribute vec3 aNext;\\nattribute vec2 aPoint;\\nvarying vec2 vPoint;\\nvarying float vLength;\\nuniform float uAspect;\\nuniform float uLwd;\\n#endif\\n\\n#ifdef USE_ENVMAP\\nvarying vec3 vReflection;\\n#endif\\n\\nvoid main(void) {\\n  \\n#ifndef IS_BRUSH\\n#if defined(NCLIPPLANES) || !defined(FIXED_QUADS) || defined(HAS_FOG) || defined(USE_ENVMAP)\\n  vPosition = mvMatrix * vec4(aPos, 1.);\\n#endif\\n  \\n#ifndef FIXED_QUADS\\n  gl_Position = prMatrix * vPosition;\\n#endif\\n#endif // !IS_BRUSH\\n  \\n#ifdef IS_POINTS\\n  gl_PointSize = POINTSIZE;\\n#endif\\n  \\n  vCol = aCol;\\n  \\n// USE_ENVMAP implies NEEDS_VNORMAL\\n\\n#ifdef NEEDS_VNORMAL\\n  vNormal = normMatrix * vec4(-aNorm, dot(aNorm, aPos));\\n#endif\\n\\n#ifdef USE_ENVMAP\\n  vReflection = normalize(reflect(vPosition.xyz/vPosition.w, \\n                        normalize(vNormal.xyz/vNormal.w)));\\n#endif\\n  \\n#ifdef IS_TWOSIDED\\n#ifdef HAS_NORMALS\\n  /* normz should be calculated *after* projection */\\n  normz = (invPrMatrix*vNormal).z;\\n#else\\n  vec4 pos1 = prMatrix*(mvMatrix*vec4(aPos1, 1.));\\n  pos1 = pos1/pos1.w - gl_Position/gl_Position.w;\\n  vec4 pos2 = prMatrix*(mvMatrix*vec4(aPos2, 1.));\\n  pos2 = pos2/pos2.w - gl_Position/gl_Position.w;\\n  normz = pos1.x*pos2.y - pos1.y*pos2.x;\\n#endif\\n#endif // IS_TWOSIDED\\n  \\n#ifdef NEEDS_VNORMAL\\n  vNormal = vec4(normalize(vNormal.xyz), 1);\\n#endif\\n  \\n#if defined(HAS_TEXTURE) || defined(IS_TEXT)\\n  vTexcoord = aTexcoord;\\n#endif\\n  \\n#if defined(FIXED_SIZE) && !defined(ROTATING)\\n  vec4 pos = prMatrix * mvMatrix * vec4(aPos, 1.);\\n  pos = pos/pos.w;\\n  gl_Position = pos + vec4(aOfs*textScale, 0.);\\n#endif\\n  \\n#if defined(IS_SPRITES) && !defined(FIXED_SIZE)\\n  vec4 pos = mvMatrix * vec4(aPos, 1.);\\n  pos = pos/pos.w + vec4(aOfs,  0.);\\n  gl_Position = prMatrix*pos;\\n#endif\\n  \\n#ifdef FAT_LINES\\n  /* This code was inspired by Matt Deslauriers' code in \\n   https://mattdesl.svbtle.com/drawing-lines-is-hard */\\n  vec2 aspectVec = vec2(uAspect, 1.0);\\n  mat4 projViewModel = prMatrix * mvMatrix;\\n  vec4 currentProjected = projViewModel * vec4(aPos, 1.0);\\n  currentProjected = currentProjected/currentProjected.w;\\n  vec4 nextProjected = projViewModel * vec4(aNext, 1.0);\\n  vec2 currentScreen = currentProjected.xy * aspectVec;\\n  vec2 nextScreen = (nextProjected.xy / nextProjected.w) * aspectVec;\\n  float len = uLwd;\\n  vec2 dir = vec2(1.0, 0.0);\\n  vPoint = aPoint;\\n  vLength = length(nextScreen - currentScreen)/2.0;\\n  vLength = vLength/(vLength + len);\\n  if (vLength > 0.0) {\\n    dir = normalize(nextScreen - currentScreen);\\n  }\\n  vec2 normal = vec2(-dir.y, dir.x);\\n  dir.x /= uAspect;\\n  normal.x /= uAspect;\\n  vec4 offset = vec4(len*(normal*aPoint.x*aPoint.y - dir), 0.0, 0.0);\\n  gl_Position = currentProjected + offset;\\n#endif\\n  \\n#ifdef IS_BRUSH\\n  gl_Position = vec4(aPos, 1.);\\n#endif\\n}\",\"fragmentShader\":\"#line 2 2\\n// File 2 is the fragment shader\\n#ifdef GL_ES\\n#ifdef GL_FRAGMENT_PRECISION_HIGH\\nprecision highp float;\\n#else\\nprecision mediump float;\\n#endif\\n#endif\\nvarying vec4 vCol; // carries alpha\\nvarying vec4 vPosition;\\n#if defined(HAS_TEXTURE) || defined (IS_TEXT)\\nvarying vec2 vTexcoord;\\nuniform sampler2D uSampler;\\n#endif\\n\\n#ifdef HAS_FOG\\nuniform int uFogMode;\\nuniform vec3 uFogColor;\\nuniform vec4 uFogParms;\\n#endif\\n\\n#if defined(IS_LIT) && !defined(FIXED_QUADS)\\nvarying vec4 vNormal;\\n#endif\\n\\n#if NCLIPPLANES > 0\\nuniform vec4 vClipplane[NCLIPPLANES];\\n#endif\\n\\n#if NLIGHTS > 0\\nuniform mat4 mvMatrix;\\n#endif\\n\\n#ifdef IS_LIT\\nuniform vec3 emission;\\nuniform float shininess;\\n#if NLIGHTS > 0\\nuniform vec3 ambient[NLIGHTS];\\nuniform vec3 specular[NLIGHTS]; // light*material\\nuniform vec3 diffuse[NLIGHTS];\\nuniform vec3 lightDir[NLIGHTS];\\nuniform bool viewpoint[NLIGHTS];\\nuniform bool finite[NLIGHTS];\\n#endif\\n#endif // IS_LIT\\n\\n#ifdef IS_TWOSIDED\\nuniform bool front;\\nvarying float normz;\\n#endif\\n\\n#ifdef FAT_LINES\\nvarying vec2 vPoint;\\nvarying float vLength;\\n#endif\\n\\n#ifdef USE_ENVMAP\\nvarying vec3 vReflection;\\n#endif\\n\\nvoid main(void) {\\n  vec4 fragColor;\\n#ifdef FAT_LINES\\n  vec2 point = vPoint;\\n  bool neg = point.y < 0.0;\\n  point.y = neg ? (point.y + vLength)/(1.0 - vLength) :\\n                 -(point.y - vLength)/(1.0 - vLength);\\n#if defined(IS_TRANSPARENT) && defined(IS_LINESTRIP)\\n  if (neg && length(point) <= 1.0) discard;\\n#endif\\n  point.y = min(point.y, 0.0);\\n  if (length(point) > 1.0) discard;\\n#endif // FAT_LINES\\n  \\n#ifdef ROUND_POINTS\\n  vec2 coord = gl_PointCoord - vec2(0.5);\\n  if (length(coord) > 0.5) discard;\\n#endif\\n  \\n#if NCLIPPLANES > 0\\n  for (int i = 0; i < NCLIPPLANES; i++)\\n    if (dot(vPosition, vClipplane[i]) < 0.0) discard;\\n#endif\\n    \\n#ifdef FIXED_QUADS\\n    vec3 n = vec3(0., 0., 1.);\\n#elif defined(IS_LIT)\\n    vec3 n = normalize(vNormal.xyz);\\n#endif\\n    \\n#ifdef IS_TWOSIDED\\n    if ((normz <= 0.) != front) discard;\\n#endif\\n\\n#ifdef IS_LIT\\n    vec3 eye = normalize(-vPosition.xyz/vPosition.w);\\n    vec3 lightdir;\\n    vec4 colDiff;\\n    vec3 halfVec;\\n    vec4 lighteffect = vec4(emission, 0.);\\n    vec3 col;\\n    float nDotL;\\n#ifdef FIXED_QUADS\\n    n = -faceforward(n, n, eye);\\n#endif\\n    \\n#if NLIGHTS > 0\\n    // Simulate two-sided lighting\\n    if (n.z < 0.0)\\n      n = -n;\\n    for (int i=0;i<NLIGHTS;i++) {\\n      colDiff = vec4(vCol.rgb * diffuse[i], vCol.a);\\n      lightdir = lightDir[i];\\n      if (!viewpoint[i]) {\\n        if (finite[i]) {\\n          lightdir = (mvMatrix * vec4(lightdir, 1.)).xyz;\\n        } else {\\n          lightdir = (mvMatrix * vec4(lightdir, 0.)).xyz;\\n        }\\n      }\\n      if (!finite[i]) {\\n        halfVec = normalize(lightdir + eye);\\n      } else {\\n        lightdir = normalize(lightdir - vPosition.xyz/vPosition.w);\\n        halfVec = normalize(lightdir + eye);\\n      }\\n      col = ambient[i];\\n      nDotL = dot(n, lightdir);\\n      col = col + max(nDotL, 0.) * colDiff.rgb;\\n      col = col + pow(max(dot(halfVec, n), 0.), shininess) * specular[i];\\n      lighteffect = lighteffect + vec4(col, colDiff.a);\\n    }\\n#endif\\n    \\n#else // not IS_LIT\\n    vec4 colDiff = vCol;\\n    vec4 lighteffect = colDiff;\\n#endif\\n    \\n#ifdef IS_TEXT\\n    vec4 textureColor = lighteffect*texture2D(uSampler, vTexcoord);\\n#endif\\n    \\n#ifdef HAS_TEXTURE\\n\\n// These calculations use the definitions from \\n// https://docs.gl/gl3/glTexEnv\\n\\n#ifdef USE_ENVMAP\\n    float m = 2.0 * sqrt(dot(vReflection, vReflection) + 2.0*vReflection.z + 1.0);\\n    vec4 textureColor = texture2D(uSampler, vReflection.xy / m + vec2(0.5, 0.5));\\n#else\\n    vec4 textureColor = texture2D(uSampler, vTexcoord);\\n#endif\\n\\n#ifdef TEXTURE_rgb\\n\\n#if defined(TEXMODE_replace) || defined(TEXMODE_decal)\\n    textureColor = vec4(textureColor.rgb, lighteffect.a);\\n#endif \\n\\n#ifdef TEXMODE_modulate\\n    textureColor = lighteffect*vec4(textureColor.rgb, 1.);\\n#endif\\n\\n#ifdef TEXMODE_blend\\n    textureColor = vec4((1. - textureColor.rgb) * lighteffect.rgb, lighteffect.a);\\n#endif\\n\\n#ifdef TEXMODE_add\\n    textureColor = vec4(lighteffect.rgb + textureColor.rgb, lighteffect.a);\\n#endif\\n\\n#endif //TEXTURE_rgb\\n        \\n#ifdef TEXTURE_rgba\\n\\n#ifdef TEXMODE_replace\\n// already done\\n#endif \\n\\n#ifdef TEXMODE_modulate\\n    textureColor = lighteffect*textureColor;\\n#endif\\n\\n#ifdef TEXMODE_decal\\n    textureColor = vec4((1. - textureColor.a)*lighteffect.rgb) +\\n                     textureColor.a*textureColor.rgb, \\n                     lighteffect.a);\\n#endif\\n\\n#ifdef TEXMODE_blend\\n    textureColor = vec4((1. - textureColor.rgb) * lighteffect.rgb,\\n                    lighteffect.a*textureColor.a);\\n#endif\\n\\n#ifdef TEXMODE_add\\n    textureColor = vec4(lighteffect.rgb + textureColor.rgb,\\n                    lighteffect.a*textureColor.a);\\n#endif\\n    \\n#endif //TEXTURE_rgba\\n    \\n#ifdef TEXTURE_alpha\\n    float luminance = dot(vec3(1.,1.,1.),textureColor.rgb)/3.;\\n\\n#if defined(TEXMODE_replace) || defined(TEXMODE_decal)\\n    textureColor = vec4(lighteffect.rgb, luminance);\\n#endif \\n\\n#if defined(TEXMODE_modulate) || defined(TEXMODE_blend) || defined(TEXMODE_add)\\n    textureColor = vec4(lighteffect.rgb, lighteffect.a*luminance);\\n#endif\\n \\n#endif // TEXTURE_alpha\\n    \\n// The TEXTURE_luminance values are not from that reference    \\n#ifdef TEXTURE_luminance\\n    float luminance = dot(vec3(1.,1.,1.),textureColor.rgb)/3.;\\n\\n#if defined(TEXMODE_replace) || defined(TEXMODE_decal)\\n    textureColor = vec4(luminance, luminance, luminance, lighteffect.a);\\n#endif \\n\\n#ifdef TEXMODE_modulate\\n    textureColor = vec4(luminance*lighteffect.rgb, lighteffect.a);\\n#endif\\n\\n#ifdef TEXMODE_blend\\n    textureColor = vec4((1. - luminance)*lighteffect.rgb,\\n                        lighteffect.a);\\n#endif\\n\\n#ifdef TEXMODE_add\\n    textureColor = vec4(luminance + lighteffect.rgb, lighteffect.a);\\n#endif\\n\\n#endif // TEXTURE_luminance\\n \\n    \\n#ifdef TEXTURE_luminance_alpha\\n    float luminance = dot(vec3(1.,1.,1.),textureColor.rgb)/3.;\\n\\n#if defined(TEXMODE_replace) || defined(TEXMODE_decal)\\n    textureColor = vec4(luminance, luminance, luminance, textureColor.a);\\n#endif \\n\\n#ifdef TEXMODE_modulate\\n    textureColor = vec4(luminance*lighteffect.rgb, \\n                        textureColor.a*lighteffect.a);\\n#endif\\n\\n#ifdef TEXMODE_blend\\n    textureColor = vec4((1. - luminance)*lighteffect.rgb,\\n                        textureColor.a*lighteffect.a);\\n#endif\\n\\n#ifdef TEXMODE_add\\n    textureColor = vec4(luminance + lighteffect.rgb, \\n                        textureColor.a*lighteffect.a);\\n\\n#endif\\n\\n#endif // TEXTURE_luminance_alpha\\n    \\n    fragColor = textureColor;\\n\\n#elif defined(IS_TEXT)\\n    if (textureColor.a < 0.1)\\n      discard;\\n    else\\n      fragColor = textureColor;\\n#else\\n    fragColor = lighteffect;\\n#endif // HAS_TEXTURE\\n    \\n#ifdef HAS_FOG\\n    // uFogParms elements: x = near, y = far, z = fogscale, w = (1-sin(FOV/2))/(1+sin(FOV/2))\\n    // In Exp and Exp2: use density = density/far\\n    // fogF will be the proportion of fog\\n    // Initialize it to the linear value\\n    float fogF;\\n    if (uFogMode > 0) {\\n      fogF = (uFogParms.y - vPosition.z/vPosition.w)/(uFogParms.y - uFogParms.x);\\n      if (uFogMode > 1)\\n        fogF = mix(uFogParms.w, 1.0, fogF);\\n      fogF = fogF*uFogParms.z;\\n      if (uFogMode == 2)\\n        fogF = 1.0 - exp(-fogF);\\n      // Docs are wrong: use (density*c)^2, not density*c^2\\n      // https://gitlab.freedesktop.org/mesa/mesa/-/blob/master/src/mesa/swrast/s_fog.c#L58\\n      else if (uFogMode == 3)\\n        fogF = 1.0 - exp(-fogF*fogF);\\n      fogF = clamp(fogF, 0.0, 1.0);\\n      gl_FragColor = vec4(mix(fragColor.rgb, uFogColor, fogF), fragColor.a);\\n    } else gl_FragColor = fragColor;\\n#else\\n    gl_FragColor = fragColor;\\n#endif // HAS_FOG\\n    \\n}\",\"players\":[],\"webGLoptions\":{\"preserveDrawingBuffer\":true},\"fastTransparency\":true},\"evals\":[],\"jsHooks\":[]}</script>\n```\n\n:::\n:::\n\n\n:::\n\nCan you visualize the data set that would yield these plots?\n\n## Scalar multiplication {.smaller}\n\nMultiplying by a scalar $c$ can affect both magnitude and direction:\n\n-   If $|c|>1$, $cu$ lengthens the vector\n-   If $|c| < 1$, $cu$ shortens the vector\n-   If $c < 0$, $cu$ reverse the vector\n\n<center>\n\n![](images/clipboard-1367738802.png)\n\n## Vector addition\n\n-   Adding two vectors is as simple as adding the \"steps\" in each direction.\n-   Consider $u = (3,1)$ and $v = (1,4)$, then $u + v = (4,5)$:\n\n![](images/clipboard-3324724953.png){fig-align=\"center\" width=\"1800\"}\n\n## Vector subtraction\n\nTo subtract vectors, e.g. $u-v$:\n\n-   Go in the $u$ direction;\n\n-   Stop and go in the negative $v$ direction\n\n## Vector subtraction\n\nWhich of these shows $u-v$? What is the value of $u-v$?: middle (2, -3) Of $v-u$?: right (-2, 3)\n\n![](images/clipboard-1009912734.png)\n\n## Vector norms\n\n-   An important characteristic of a vector is its *norm*.\n\n-   Norm $\\equiv$ size, or length\n\n-   There are many ways to measure the norm of a vector. Two important measures in data science include:\n\n    -   L1 norm (aka \"Taxicab\" or \"Manhattan\")\n\n    -   L2 norm (aka \"Euclidean\" norm)\n\n-   *Norms are always* $\\geq 0$! CANNOT BE NEGATIVE\n\n## L1 (\"taxicab\") norm example\n\nConsider the vector $u = (3,2)$:\n\n![](images/clipboard-533404553.png)\n\n$$\n||u||_1 = 5\n$$\n\n## L1 (\"taxicab\") norm example\n\nNow consider $v = (-4, -5)$: DOWN/LEFT IS NOT NEGATIVE\n\n![](images/clipboard-333534670.png)\n\n$$\n||v||_1 = 9\n$$\n\n## L1 norm, formally defined - abs value of coordinates summed\n\nGiven a $p$-vector $u = (u_1, u_2, ...,u_p)$:\n\n$$\n||u||_1 = \\sum_{i=1}^p |u_i|\n$$\n\n## L2 norm {.smaller}\n\n-   Taxicabs are inefficient ways of moving from $A$ to $B$!\n\n-   Recall again $u = (3,2)$.\n\n-   Imagine you are a helicopter, you can fly straight from the origin $(0,0)$ to $(3,2)$. How far did you fly?\n\n![](images/clipboard-2632451596.png){fig-align=\"center\"}\n\nPythagorean!\n\n$$\n||u||_2 = \\sqrt{3^2 + 2^2} = \\sqrt{13} = 3.61\n$$\n\n## L2 norm of $v$\n\nWhat is the L2 norm of $v = (-4, -5)$?\n\n![](images/clipboard-2866215374.png){fig-align=\"center\"}\n\n## L2 norm, formally defined - (a^2^ + b^2^ )\\^1/2\n\nGiven a $p$-vector $u = (u_1, u_2, ...,u_p)$:\n\n$$\n||u||_2 = \\sqrt{\\sum_{i=1}^p u_i^2}\n$$\n\n## Vectors in `R`\n\nThe following code can be used to create vectors $u$ and $v$ from the previous examples, and compute their norms:\n\n::: column\n\n\n::: {.cell}\n\n```{.r .cell-code}\nu <- c(3,2)\nv <- c(-4,5)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n#L1 norms:\nsum(abs(u))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 5\n```\n\n\n:::\n\n```{.r .cell-code}\nsum(abs(v))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 9\n```\n\n\n:::\n\n```{.r .cell-code}\n#L2 norms:\nsqrt(sum(u^2))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 3.605551\n```\n\n\n:::\n\n```{.r .cell-code}\nsqrt(sum(v^2))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 6.403124\n```\n\n\n:::\n:::\n\n\n:::\n\n::: column\n\n\n::: {.cell}\n\n```{.r .cell-code}\n#NOT an L2 norm:\nsum(sqrt(v^2))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 9\n```\n\n\n:::\n\n```{.r .cell-code}\n#NOT an L2 norm:\nsqrt(sum(v))^2\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 1\n```\n\n\n:::\n:::\n\n\n:::\n\n## Mean vectors {.smaller}\n\n*Scaling* is an important concept in this class, and one important scaling ingredient is the *mean vector*.\n\n::: column\n-   Consider the plot of the `cars` data set.\\\n-   The complete data set has $n=50$ rows (i.e., 2-dimensional vectors)\n-   The red diamond in the middle is the *mean vector*\n    -   Horizontal coordinate: mean of top density (Speed)\n    -   Vertical coordinate: mean of right density (Stopping distance)\n:::\n\n::: column\n\n\n::: {.cell layout-align=\"right\"}\n::: {.cell-output-display}\n![](1.1-linear-algebra_files/figure-revealjs/unnamed-chunk-11-1.png){fig-align='right' width=960}\n:::\n:::\n\n\n:::\n\n## Mean vector formally defined\n\nGiven $n$ $p-$dimensional vectors $u_i$, the *mean vector* $m$ is simply:\n\n$$m = \\frac{1}{n} \\cdot \\sum_{i=1}^n u_i$$\n\n## Calculating mean vectors in `R`\n\nThere are two ways to find mean vectors in `R`:\n\n1.  `dplyr` approach (allows you to specify which column to average):\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n(cars\n %>% summarize(across(.cols = c(speed, dist), .fns = mean))\n)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n  speed  dist\n1  15.4 42.98\n```\n\n\n:::\n:::\n\n\n\n2.  Base `R` approach (requires all columns to be numeric):\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\napply(cars, 2, FUN = mean)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nspeed  dist \n15.40 42.98 \n```\n\n\n:::\n:::\n\n\n\n## Mean-centering : scale function in R {.smaller}\n\n-   Subtracting the mean vector from the data yields *mean-centered* data: all columns have mean 0.\n\n-   The best way to mean-center columns in `R` is with the `scale` command:\n\n-   `scale` both centers and standardizes (more later); for now we just want centering:\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ncars_centered <- scale(cars, center = TRUE, scale = FALSE)\n```\n:::\n\n::: {.cell layout-align=\"center\"}\n::: {.cell-output-display}\n![](1.1-linear-algebra_files/figure-revealjs/unnamed-chunk-15-1.png){fig-align='center' width=960}\n:::\n:::\n\n\n\n## Code for previous plot\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Make the base scatterplot\nlibrary(tidyverse)\np <- ggplot(cars_centered, aes(x = speed, y = dist)) +\n  geom_point(color = \"steelblue\", size = 3, alpha= .7) +\n  geom_point(color=\"red\", size = 4, aes(x = 0, y = 0), pch=18) + \n  geom_hline(aes(yintercept = 0), linetype = 2) + \n  geom_vline(aes(xintercept = 0), linetype = 2)+\n  theme_classic(base_size = 18) +\n  labs(x = \"Speed\",\n       y = \"Stopping Distance\")\n\n# Add marginal density plots\nlibrary(ggExtra)\nggMarginal(p, type = \"density\", fill = \"lightblue\", alpha = 0.5)\n```\n:::\n\n\n\n## Std dev scaling {.smaller}\n\n-   After mean centering, dividing by the standard deviation results in $p-$ vectors that are elementwise mean 0 and standard deviation = 1.\n-   Important implications for measuring length and (later) distance between vectors.\n-   Finding standard deviation vectors:\n\n::: {.column width=\"60%\"}\n`dplyr` approach:\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n(cars\n %>% summarize(across(.cols = c(speed, dist), .fns = sd))\n )\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n     speed     dist\n1 5.287644 25.76938\n```\n\n\n:::\n:::\n\n\n:::\n\n::: {.column width=\"40%\"}\nBase `R` approach:\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\napply(cars, 2, FUN = sd)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n    speed      dist \n 5.287644 25.769377 \n```\n\n\n:::\n:::\n\n\n:::\n\n## Full scaling {.smaller}\n\nThe complete scaling can be completed with:\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ncars_scaled <- scale(cars, center = TRUE, scale = TRUE)\n```\n:::\n\n\n\nNote the attributes return the mean and standard deviation vectors:\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nattr(cars_scaled, \"scaled:center\")\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nspeed  dist \n15.40 42.98 \n```\n\n\n:::\n\n```{.r .cell-code}\nattr(cars_scaled, \"scaled:scale\")\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n    speed      dist \n 5.287644 25.769377 \n```\n\n\n:::\n:::\n\n\n\n## Plot of scaled data\n\n\n\n::: {.cell layout-align=\"center\"}\n::: {.cell-output-display}\n![](1.1-linear-algebra_files/figure-revealjs/unnamed-chunk-21-1.png){fig-align='center' width=960}\n:::\n:::\n\n\n\n## Distances between vectors\n\n-   We've considered the norm (\"length\") of a single vector.\n-   **Distance between vectors** is an important concept in this class, and is related to vector norms.\n-   We'll talk a lot more about distances later; going to consider a more formal vector-based definition now.\n\n## Distance visualized\n\nConsider two vectors $u = (3,1)$ and $v = (1,4)$:\n\n![](images/clipboard-503625232.png){fig-align=\"center\"}\n\n## Distance visualized\n\nSubtracting $u$ from $v$ yields the vector $(-2, 3)$:\n\n![](images/clipboard-292842847.png){fig-align=\"center\"}\n\n## Distance visualized\n\nNote that this vector is exactly the right magnitude and direction for traveling from $u$ to $v$:\n\n![](images/clipboard-2204196700.png){fig-align=\"center\"}\n\n## Distance defined {.smaller}\n\n-   We define the *distance between* vectors$u$ and $v$ be the norm (recall: length) of the vector $u-v$ (or equivalently, the norm of the vector $v-u$).\n\n-   Accordingly, distance can *also* be defined in L1 (\"taxicab\" or \"Manhattan\") or L2 (\"Euclidean\") form.\n\n    $$\n    ||u-v||_1 = \\sum_{i=1}^p |u_i -v_i|\n    $$\n\n$$\n||u-v||_2 = \\sqrt{\\sum_{i=1}^p (u_i -v_i)^2}\n$$\n\n## Calculating distance for example {.smaller}\n\n-   L1 distance: $|3-1| + |1-4| = 5$\n-   L2 distance: $\\sqrt{(3-1)^2 + (1-4)^2} = \\sqrt{13} = 3.61$\n\n![](images/clipboard-503625232.png){fig-align=\"center\"}\n\n## Air pollution data {.smaller}\n\nConsider the `USairpollution` data set from the `HSAUR2` package:\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(HSAUR2)\ndata(\"USairpollution\")\nhead(USairpollution)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n            SO2 temp manu popul wind precip predays\nAlbany       46 47.6   44   116  8.8  33.36     135\nAlbuquerque  11 56.8   46   244  8.9   7.77      58\nAtlanta      24 61.5  368   497  9.1  48.34     115\nBaltimore    47 55.0  625   905  9.6  41.31     111\nBuffalo      11 47.1  391   463 12.4  36.11     166\nCharleston   31 55.2   35    71  6.5  40.75     148\n```\n\n\n:::\n:::\n\n\n\n## Air pollution data {.smaller}\n\n*Pairs plots* are useful ways of visualizing multidimensional data. The `ggpairs` function from `GGally` produces:\n\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nlibrary(GGally)\nggpairs(data = USairpollution) + \n  theme_bw()\n```\n\n::: {.cell-output-display}\n![](1.1-linear-algebra_files/figure-revealjs/unnamed-chunk-23-1.png){fig-align='center' width=960}\n:::\n:::\n\n\n\n## The `dist` function {.smaller}\n\n-   The `dist()` function can be used to compute distances between $n$ vectors of $p$ dimensions, arranged in 1-row-per-*p*-vector data frames.\n-   By default, `method = 'euclidean'` (L2 distances); see `?dist` for other options.\n-   The following code all pairwise distances between 41 cities in the `USairpollution` data set from the `HSAUR2` package:\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\npollution_dist <- dist(USairpollution) \n```\n:::\n\n\n\nBy default, a distance matrix is lower-triangular. First 6 rows:\n\n``` r\n                Albany Albuquerque  Atlanta Baltimore  Buffalo   Charleston  \nAlbuquerque     155.825                                                                                                                                 \nAtlanta         501.437     415.667                                                                                                                     \nBaltimore       980.193     881.700  482.856                                                                                                            \nBuffalo         492.975     423.745   69.447   504.518                                                                                                  \nCharleston       51.163     199.113  541.855  1022.395  530.326                                                                                         \nChicago        4634.251    4545.006 4136.752  3669.934 4144.490   4672.609 \n```\n\n## Wrangling the `dist` object {.smaller auto-animate=\"true\"}\n\n-   The following code wrangles the `dist` object:\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(HSAUR2)\ndata(\"USairpollution\")\ndistance_df <- (pollution_dist\n  %>%  as.matrix  # <1>\n) \n```\n:::\n\n\n\n1.  Converge `dist` object to a matrix\n\n## Wrangling the `dist` object {.smaller auto-animate=\"true\"}\n\n-   The following code wrangles the `dist` object:\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(HSAUR2)\ndata(\"USairpollution\")\ndistance_df <- (pollution_dist\n  %>%  as.matrix  # <1>\n  %>% data.frame  # <2>\n) \n```\n:::\n\n\n\n1.  Converge `dist` object to a matrix\n2.  Convert $p \\times p$ matrix to a data frame\n\n## Wrangling the `dist` object {.smaller auto-animate=\"true\"}\n\n-   The following code wrangles the `dist` object:\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(HSAUR2)\ndata(\"USairpollution\")\ndistance_df <- (pollution_dist\n  %>%  as.matrix  # <1>\n  %>% data.frame  # <2>\n  %>% mutate(CityA = rownames(.)) #<3>\n) \n```\n:::\n\n\n\n1.  Converge `dist` object to a matrix\n2.  Convert $p \\times p$ matrix to a data frame\n3.  Create new column moving the rownames to an actual variable\n\n## Wrangling the `dist` object {.smaller auto-animate=\"true\"}\n\n-   The following code wrangles the `dist` object:\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(HSAUR2)\ndata(\"USairpollution\")\ndistance_df <- (pollution_dist\n  %>%  as.matrix  # <1>\n  %>% data.frame  # <2>\n  %>% mutate(CityA = rownames(.)) #<3>\n  %>% pivot_longer(cols = -CityA, \n                   names_to = 'CityB', \n                   values_to = 'Distance') #<4>\n) \n```\n:::\n\n\n\n1.  Converge `dist` object to a matrix\n2.  Convert $p \\times p$ matrix to a data frame\n3.  Create new column moving the rownames to an actual variable\n4.  Pivot the data\n\n## Result {.smaller}\n\nWe're primed to play!\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nhead(distance_df)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 6 × 3\n  CityA  CityB       Distance\n  <chr>  <chr>          <dbl>\n1 Albany Albany           0  \n2 Albany Albuquerque    156. \n3 Albany Atlanta        501. \n4 Albany Baltimore      980. \n5 Albany Buffalo        493. \n6 Albany Charleston      51.2\n```\n\n\n:::\n:::\n",
    "supporting": [
      "1.1-linear-algebra_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-in-header": [
        "<script src=\"1.1-linear-algebra_files/libs/htmlwidgets-1.6.4/htmlwidgets.js\"></script>\n<script src=\"1.1-linear-algebra_files/libs/rglWebGL-binding-1.3.24/rglWebGL.js\"></script>\n<link href=\"1.1-linear-algebra_files/libs/rglwidgetClass-1.3.24/rgl.css\" rel=\"stylesheet\" />\n<script src=\"1.1-linear-algebra_files/libs/rglwidgetClass-1.3.24/rglClass.src.js\"></script>\n<script src=\"1.1-linear-algebra_files/libs/rglwidgetClass-1.3.24/utils.src.js\"></script>\n<script src=\"1.1-linear-algebra_files/libs/rglwidgetClass-1.3.24/buffer.src.js\"></script>\n<script src=\"1.1-linear-algebra_files/libs/rglwidgetClass-1.3.24/subscenes.src.js\"></script>\n<script src=\"1.1-linear-algebra_files/libs/rglwidgetClass-1.3.24/shaders.src.js\"></script>\n<script src=\"1.1-linear-algebra_files/libs/rglwidgetClass-1.3.24/shadersrc.src.js\"></script>\n<script src=\"1.1-linear-algebra_files/libs/rglwidgetClass-1.3.24/textures.src.js\"></script>\n<script src=\"1.1-linear-algebra_files/libs/rglwidgetClass-1.3.24/projection.src.js\"></script>\n<script src=\"1.1-linear-algebra_files/libs/rglwidgetClass-1.3.24/mouse.src.js\"></script>\n<script src=\"1.1-linear-algebra_files/libs/rglwidgetClass-1.3.24/init.src.js\"></script>\n<script src=\"1.1-linear-algebra_files/libs/rglwidgetClass-1.3.24/pieces.src.js\"></script>\n<script src=\"1.1-linear-algebra_files/libs/rglwidgetClass-1.3.24/draw.src.js\"></script>\n<script src=\"1.1-linear-algebra_files/libs/rglwidgetClass-1.3.24/controls.src.js\"></script>\n<script src=\"1.1-linear-algebra_files/libs/rglwidgetClass-1.3.24/selection.src.js\"></script>\n<script src=\"1.1-linear-algebra_files/libs/rglwidgetClass-1.3.24/rglTimer.src.js\"></script>\n<script src=\"1.1-linear-algebra_files/libs/rglwidgetClass-1.3.24/pretty.src.js\"></script>\n<script src=\"1.1-linear-algebra_files/libs/rglwidgetClass-1.3.24/axes.src.js\"></script>\n<script src=\"1.1-linear-algebra_files/libs/rglwidgetClass-1.3.24/animation.src.js\"></script>\n<script src=\"1.1-linear-algebra_files/libs/CanvasMatrix4-1.3.24/CanvasMatrix.src.js\"></script>\n"
      ],
      "include-after-body": [
        "\n<script>\n  // htmlwidgets need to know to resize themselves when slides are shown/hidden.\n  // Fire the \"slideenter\" event (handled by htmlwidgets.js) when the current\n  // slide changes (different for each slide format).\n  (function () {\n    // dispatch for htmlwidgets\n    function fireSlideEnter() {\n      const event = window.document.createEvent(\"Event\");\n      event.initEvent(\"slideenter\", true, true);\n      window.document.dispatchEvent(event);\n    }\n\n    function fireSlideChanged(previousSlide, currentSlide) {\n      fireSlideEnter();\n\n      // dispatch for shiny\n      if (window.jQuery) {\n        if (previousSlide) {\n          window.jQuery(previousSlide).trigger(\"hidden\");\n        }\n        if (currentSlide) {\n          window.jQuery(currentSlide).trigger(\"shown\");\n        }\n      }\n    }\n\n    // hookup for slidy\n    if (window.w3c_slidy) {\n      window.w3c_slidy.add_observer(function (slide_num) {\n        // slide_num starts at position 1\n        fireSlideChanged(null, w3c_slidy.slides[slide_num - 1]);\n      });\n    }\n\n  })();\n</script>\n\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}